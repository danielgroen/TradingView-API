{
  "name": "⛔️BOTIFY TESTING",
  "layout": "s",
  "charts": [
    {
      "panes": [
        {
          "sources": [
            {
              "type": "MainSeries",
              "id": "_seriesId",
              "zorder": 0,
              "haStyle": {
                "studyId": "BarSetHeikenAshi@tv-basicstudies-60"
              },
              "renkoStyle": {
                "studyId": "BarSetRenko@tv-prostudies-73"
              },
              "pbStyle": {
                "studyId": "BarSetPriceBreak@tv-prostudies-34"
              },
              "kagiStyle": {
                "studyId": "BarSetKagi@tv-prostudies-73"
              },
              "pnfStyle": {
                "studyId": "BarSetPnF@tv-prostudies-73"
              },
              "rangeStyle": {
                "studyId": "BarSetRange@tv-basicstudies-72"
              },
              "volFootprintStyle": {
                "studyId": "Footprint@tv-volumebyprice-104"
              },
              "tpoStyle": {
                "studyId": "TPOPeriodic@tv-volumebyprice-104"
              },
              "svpStyle": {
                "studyId": "VbPSessions@tv-volumebyprice-126"
              },
              "formattingDeps": {
                "pricescale": 100,
                "minmov": 1,
                "fractional": false,
                "minmove2": 0,
                "variable_tick_size": ""
              },
              "studyBindings": {
                "17": null,
                "18": {},
                "20": null
              },
              "state": {
                "style": 1,
                "esdShowDividends": true,
                "esdShowSplits": true,
                "esdShowEarnings": true,
                "esdShowBreaks": false,
                "esdFlagSize": 2,
                "showContinuousContractSwitches": true,
                "showContinuousContractSwitchesBreaks": false,
                "showFuturesContractExpiration": true,
                "showLastNews": true,
                "showCountdown": true,
                "bidAsk": {
                  "visible": false,
                  "lineStyle": 1,
                  "lineWidth": 1,
                  "bidLineColor": "#2962FF",
                  "askLineColor": "#F7525F"
                },
                "prePostMarket": {
                  "visible": true,
                  "lineStyle": 1,
                  "lineWidth": 1,
                  "preMarketColor": "#FB8C00",
                  "postMarketColor": "#2962FF"
                },
                "highLowAvgPrice": {
                  "highLowPriceLinesVisible": false,
                  "highLowPriceLabelsVisible": false,
                  "averageClosePriceLineVisible": false,
                  "averageClosePriceLabelVisible": false,
                  "highLowPriceLinesWidth": 1,
                  "averagePriceLineWidth": 1,
                  "highLowPriceLinesColor": "",
                  "averagePriceLineColor": ""
                },
                "visible": true,
                "showPriceLine": true,
                "priceLineWidth": 1,
                "showPrevClosePriceLine": false,
                "prevClosePriceLineWidth": 1,
                "minTick": "default",
                "dividendsAdjustment": false,
                "backAdjustment": false,
                "settlementAsClose": true,
                "sessionId": "regular",
                "sessVis": false,
                "statusViewStyle": {
                  "fontSize": 16,
                  "showExchange": true,
                  "showInterval": true,
                  "symbolTextSource": "ticker"
                },
                "candleStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "barColorsOnPrevClose": false,
                  "drawBody": true,
                  "borderColor": "#378658",
                  "upColor": "#089981",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645"
                },
                "volCandlesStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "barColorsOnPrevClose": false,
                  "drawBody": true,
                  "borderColor": "#378658",
                  "upColor": "#089981",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645"
                },
                "hollowCandleStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "drawBody": true,
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "borderColor": "#378658",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645"
                },
                "haStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "showRealLastPrice": false,
                  "barColorsOnPrevClose": false,
                  "inputs": {},
                  "inputInfo": {},
                  "drawBody": true,
                  "borderColor": "#378658",
                  "upColor": "#089981",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645"
                },
                "barStyle": {
                  "barColorsOnPrevClose": false,
                  "dontDrawOpen": false,
                  "thinBars": true,
                  "downColor": "#F23645",
                  "upColor": "#089981"
                },
                "hiloStyle": {
                  "showBorders": true,
                  "showLabels": true,
                  "drawBody": true,
                  "color": "#2962FF",
                  "borderColor": "#2962FF",
                  "labelColor": "#2962FF"
                },
                "columnStyle": {
                  "barColorsOnPrevClose": true,
                  "priceSource": "close",
                  "baselinePosition": "bottom",
                  "upColor": "rgba(8, 153, 129, 0.5)",
                  "downColor": "rgba(242, 54, 69, 0.5)"
                },
                "lineStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "colorType": "solid",
                  "color": "#2962FF",
                  "gradientStartColor": "#D500F9",
                  "gradientEndColor": "#00BCE5"
                },
                "tpoStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "styles": {
                    "splitByBlocks": false,
                    "splitByBlocksMode": 0
                  },
                  "tpo": {
                    "showBlocks": true,
                    "showLetters": true,
                    "nonVaOpacity": 30,
                    "colors": {
                      "gradientColors": [
                        "#e91e63",
                        "#00c853",
                        "#00bcd4",
                        "#651FFF"
                      ]
                    }
                  },
                  "levels": {
                    "showPOC": true,
                    "showPoorHigh": false,
                    "showPoorLow": false,
                    "showSingleprints": false,
                    "showVAH": true,
                    "showVAL": true,
                    "showMidpoint": false,
                    "showOpenPrice": false,
                    "showClosePrice": false,
                    "initialBalanceRange": {
                      "levels": 2,
                      "visible": true
                    },
                    "pocColor": "#0F0F0F",
                    "poorHighColor": "#6200EA",
                    "poorLowColor": "#6200EA",
                    "singleprintsColor": "rgba(224, 64, 251, 0.15)",
                    "vahColor": "#0F0F0F",
                    "valColor": "#0F0F0F"
                  },
                  "volumeProfile": {
                    "visible": true,
                    "showValues": false,
                    "vah": {
                      "visible": false,
                      "linestyle": 0,
                      "linewidth": 2,
                      "color": "#0F0F0F"
                    },
                    "val": {
                      "visible": false,
                      "linestyle": 0,
                      "linewidth": 2,
                      "color": "#0F0F0F"
                    },
                    "poc": {
                      "visible": false,
                      "linestyle": 0,
                      "linewidth": 2,
                      "color": "#0F0F0F"
                    },
                    "placement": "left_to_right",
                    "valuesColor": "#0F0F0F",
                    "volumeColor": "rgba(38, 198, 218, 0.5)",
                    "valueAreaColor": "rgba(38, 198, 218, 0.75)"
                  },
                  "inputs": {
                    "periodsNum": 1,
                    "period": "Day",
                    "blockSize": "30m",
                    "rowSize": "Auto",
                    "ticksPerRow": 10,
                    "vaPercent": 70,
                    "extendPoorHigh": false,
                    "extendPoorLow": false,
                    "extendPOC": false,
                    "extendTpoVah": false,
                    "extendTpoVal": false,
                    "extendVolumePoc": false,
                    "extendVolumeVah": false,
                    "extendVolumeVal": false,
                    "extendSingleprints": false,
                    "mergePoints": "[]"
                  },
                  "summary": {
                    "visible": false,
                    "belowSeries": true,
                    "infoBlocks": {
                      "hlRange": {
                        "visible": false
                      },
                      "pocPrice": {
                        "visible": true
                      },
                      "rotationFactor": {
                        "visible": false
                      },
                      "totalVolume": {
                        "visible": false
                      },
                      "tpoCountAbovePoc": {
                        "visible": false
                      },
                      "tpoCountBelowPoc": {
                        "visible": false
                      },
                      "tpoCountTotal": {
                        "visible": false
                      },
                      "vaRange": {
                        "visible": false
                      },
                      "vahPrice": {
                        "visible": true
                      },
                      "valPrice": {
                        "visible": true
                      },
                      "initialBalanceHigh": {
                        "visible": true
                      },
                      "initialBalanceLow": {
                        "visible": true
                      },
                      "initialBalanceRange": {
                        "visible": true
                      }
                    }
                  },
                  "color": "#2962FF"
                },
                "svpStyle": {
                  "inputs": {
                    "profilesSessions": "All",
                    "customSession": "0930-1600",
                    "customSessionTZ": "Exchange",
                    "volume": "Up/Down",
                    "vaVolume": 70,
                    "extendPocRight": false,
                    "extendVAHRight": false,
                    "extendVALRight": false,
                    "rowsLayout": "Number Of Rows",
                    "rows": 24
                  },
                  "volumeProfile": {
                    "visible": true,
                    "showValues": false,
                    "placement": "left_to_right",
                    "percentWidth": 100,
                    "valuesColor": "#0F0F0F",
                    "volumeColorUp": "rgba(38, 198, 218, 0.5)",
                    "volumeColorDown": "rgba(236, 64, 122, 0.5)",
                    "valueAreaColorUp": "rgba(38, 198, 218, 0.75)",
                    "valueAreaColorDown": "rgba(236, 64, 122, 0.75)",
                    "histogramBoxColor": "rgba(38, 198, 218, 0.05)"
                  },
                  "vah": {
                    "visible": false,
                    "linestyle": 0,
                    "linewidth": 2,
                    "color": "#0F0F0F"
                  },
                  "val": {
                    "visible": false,
                    "linestyle": 0,
                    "linewidth": 2,
                    "color": "#0F0F0F"
                  },
                  "poc": {
                    "visible": true,
                    "linestyle": 0,
                    "linewidth": 2,
                    "color": "#0F0F0F"
                  },
                  "developingPoc": {
                    "visible": false,
                    "linestyle": 0,
                    "linewidth": 1,
                    "color": "#0F0F0F"
                  },
                  "developingVA": {
                    "visible": false,
                    "linestyle": 0,
                    "linewidth": 1,
                    "color": "#00bcd4"
                  }
                },
                "lineWithMarkersStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "colorType": "solid",
                  "color": "#2962FF",
                  "gradientStartColor": "#D500F9",
                  "gradientEndColor": "#00BCE5"
                },
                "steplineStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "colorType": "solid",
                  "color": "#2962FF",
                  "gradientStartColor": "#D500F9",
                  "gradientEndColor": "#00BCE5"
                },
                "areaStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "transparency": 100,
                  "color1": "rgba(41, 98, 255, 0.28)",
                  "color2": "#2962FF",
                  "linecolor": "#2962FF"
                },
                "hlcAreaStyle": {
                  "highLineVisible": true,
                  "highLineStyle": 0,
                  "highLineWidth": 2,
                  "lowLineVisible": true,
                  "lowLineStyle": 0,
                  "lowLineWidth": 2,
                  "closeLineStyle": 0,
                  "closeLineWidth": 2,
                  "highLineColor": "#089981",
                  "lowLineColor": "#F23645",
                  "closeLineColor": "#868993",
                  "highCloseFillColor": "rgba(8, 153, 129, 0.2)",
                  "closeLowFillColor": "rgba(242, 54, 69, 0.2)"
                },
                "renkoStyle": {
                  "inputs": {
                    "source": "close",
                    "sources": "Close",
                    "boxSize": 3,
                    "style": "ATR",
                    "atrLength": 14,
                    "percentageLTP": 1,
                    "wicks": true
                  },
                  "inputInfo": {
                    "source": {
                      "name": "Source"
                    },
                    "sources": {
                      "name": "Source"
                    },
                    "boxSize": {
                      "name": "Box size"
                    },
                    "style": {
                      "name": "Style"
                    },
                    "atrLength": {
                      "name": "ATR length"
                    },
                    "percentageLTP": {
                      "name": "Percentage"
                    },
                    "wicks": {
                      "name": "Wicks"
                    }
                  },
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f",
                  "borderUpColorProjection": "#336854",
                  "borderDownColorProjection": "#7f323f",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645"
                },
                "pbStyle": {
                  "inputs": {
                    "source": "close",
                    "lb": 3
                  },
                  "inputInfo": {
                    "source": {
                      "name": "Source"
                    },
                    "lb": {
                      "name": "Number of line"
                    }
                  },
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f",
                  "borderUpColorProjection": "#336854",
                  "borderDownColorProjection": "#7f323f"
                },
                "kagiStyle": {
                  "inputs": {
                    "source": "close",
                    "style": "ATR",
                    "atrLength": 14,
                    "percentageLTP": 1,
                    "reversalAmount": 1
                  },
                  "inputInfo": {
                    "source": {
                      "name": "Source"
                    },
                    "style": {
                      "name": "Style"
                    },
                    "atrLength": {
                      "name": "ATR length"
                    },
                    "percentageLTP": {
                      "name": "Percentage"
                    },
                    "reversalAmount": {
                      "name": "Reversal amount"
                    }
                  },
                  "downColor": "#F23645",
                  "upColor": "#089981",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f"
                },
                "pnfStyle": {
                  "inputs": {
                    "sources": "Close",
                    "reversalAmount": 3,
                    "boxSize": 1,
                    "style": "ATR",
                    "atrLength": 14,
                    "percentageLTP": 1,
                    "oneStepBackBuilding": false
                  },
                  "inputInfo": {
                    "sources": {
                      "name": "Source"
                    },
                    "boxSize": {
                      "name": "Box size"
                    },
                    "reversalAmount": {
                      "name": "Reversal amount"
                    },
                    "style": {
                      "name": "Style"
                    },
                    "atrLength": {
                      "name": "ATR length"
                    },
                    "percentageLTP": {
                      "name": "Percentage"
                    },
                    "oneStepBackBuilding": {
                      "name": "One step back building"
                    }
                  },
                  "downColor": "#F23645",
                  "upColor": "#089981",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f"
                },
                "baselineStyle": {
                  "topLineWidth": 2,
                  "bottomLineWidth": 2,
                  "topLineStyle": 0,
                  "bottomLineStyle": 0,
                  "priceSource": "close",
                  "transparency": 50,
                  "baseLevelPercentage": 50,
                  "baselineColor": "#758696",
                  "topFillColor1": "rgba(8, 153, 129, 0.28)",
                  "topFillColor2": "rgba(8, 153, 129, 0.05)",
                  "bottomFillColor1": "rgba(242, 54, 69, 0.05)",
                  "bottomFillColor2": "rgba(242, 54, 69, 0.28)",
                  "topLineColor": "#089981",
                  "bottomLineColor": "#F23645"
                },
                "rangeStyle": {
                  "barStyle": 0,
                  "thinBars": true,
                  "inputs": {
                    "range": 10,
                    "phantomBars": false
                  },
                  "inputInfo": {
                    "range": {
                      "name": "Range"
                    },
                    "phantomBars": {
                      "name": "Phantom bars"
                    }
                  },
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f",
                  "candlesUpColor": "#089981",
                  "candlesDownColor": "#F23645",
                  "candlesBorderUpColor": "#089981",
                  "candlesBorderDownColor": "#F23645",
                  "candlesWickUpColor": "#089981",
                  "candlesWickDownColor": "#F23645"
                },
                "volFootprintStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "barColorsOnPrevClose": false,
                  "drawBody": true,
                  "deltaAdjust": true,
                  "showSummary": true,
                  "summaryMode": 0,
                  "extendedSummary": {
                    "belowSeries": true,
                    "blockInfo": {
                      "volume": {
                        "visible": true
                      },
                      "volumePercentage": {
                        "visible": false
                      },
                      "buyVolume": {
                        "visible": false
                      },
                      "buyVolumePercentage": {
                        "visible": false
                      },
                      "sellVolume": {
                        "visible": false
                      },
                      "sellVolumePercentage": {
                        "visible": false
                      },
                      "delta": {
                        "visible": true
                      },
                      "deltaPercentage": {
                        "visible": false
                      },
                      "minDelta": {
                        "visible": false
                      },
                      "maxDelta": {
                        "visible": false
                      },
                      "sessionCVD": {
                        "visible": true
                      },
                      "pocPrice": {
                        "visible": true
                      },
                      "hlRange": {
                        "visible": false
                      }
                    },
                    "openInterestBlockInfo": {
                      "openInterest": {
                        "visible": true
                      }
                    },
                    "extendedOpenInterestBlockInfo": {
                      "openInterestHigh": {
                        "visible": true
                      },
                      "openInterestLow": {
                        "visible": true
                      }
                    }
                  },
                  "type": "Buy and sell",
                  "displayMode": 0,
                  "pointOfControl": true,
                  "imbalanceHighlight": {
                    "visible": true,
                    "buyColor": "#089981",
                    "sellColor": "#F23645"
                  },
                  "inputs": {
                    "rowSize": "Auto",
                    "atrLength": 14,
                    "imbalancePercent": 300,
                    "ticksPerRow": 100,
                    "showVA": true,
                    "vaPercent": 70,
                    "calcStackedImbalance": false,
                    "stackedImbalanceCount": 3
                  },
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "borderColor": "#378658",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645",
                  "bgColors": {
                    "adjBuyBgColors": [
                      "#082621",
                      "#004D40",
                      "#06806B",
                      "#22AB94"
                    ],
                    "adjSellBgColors": [
                      "#331F20",
                      "#991F29",
                      "#CC2F3C",
                      "#F7525F"
                    ],
                    "adjTotalBgColors": [
                      "#142E61",
                      "#143EB3",
                      "#1E53E5",
                      "#3179F5"
                    ],
                    "buyBgColor": "#004D40",
                    "sellBgColor": "#991F29",
                    "totalBgColor": "#143EB3",
                    "pocColor": "#000000"
                  }
                },
                "hlcBarsStyle": {
                  "barColorsOnPrevClose": false,
                  "thinBars": true,
                  "color": "#2962FF"
                },
                "baseLineColor": "#5d606b",
                "prevClosePriceLineColor": "#555555",
                "priceLineColor": "",
                "symbol": "BYBIT:SOLUSDT.P",
                "shortName": "SOLUSDT.P",
                "timeframe": "",
                "interval": "120",
                "unitId": null,
                "currencyId": "XTVCUSDT",
                "priceAxisProperties": {
                  "autoScale": true,
                  "autoScaleDisabled": false,
                  "lockScale": false,
                  "percentage": false,
                  "percentageDisabled": false,
                  "log": false,
                  "logDisabled": false,
                  "alignLabels": true,
                  "isInverted": false,
                  "indexedTo100": false,
                  "showSymbolLabels": false,
                  "showStudyPlotLabels": true,
                  "m_priceRange": {
                    "m_maxValue": 1.14728,
                    "m_minValue": 1.14304
                  },
                  "m_isAutoScale": true,
                  "m_isPercentage": false,
                  "m_isIndexedTo100": false,
                  "m_isLog": false,
                  "m_isLockScale": false,
                  "m_isInverted": false,
                  "m_height": 562,
                  "m_topMargin": 0.05,
                  "m_bottomMargin": 0.05
                }
              }
            },
            {
              "type": "Study",
              "id": "vObAdA",
              "state": {
                "inputs": {
                  "in_0": 200,
                  "in_1": "high",
                  "in_2": 1,
                  "in_3": "",
                  "in_4": true,
                  "pineFeatures": "{\"indicator\":1,\"plot\":1,\"ta\":1,\"alertcondition\":1}",
                  "pineId": "",
                  "pineVersion": ""
                },
                "styles": {
                  "plot_0": {
                    "color": "#2962ff",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": 0,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_0"
                  },
                  "plot_2": {
                    "color": "rgba(0,255,187,0)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 0,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_2"
                  },
                  "plot_3": {
                    "color": "rgba(0,255,187,0)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 0,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_3"
                  },
                  "plot_4": {
                    "color": "rgba(0,255,187,0)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 0,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_4"
                  },
                  "plot_5": {
                    "color": "rgba(0,255,187,0)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 0,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_5"
                  },
                  "plot_6": {
                    "display": 15,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "alertcondition",
                    "trackPrice": false,
                    "title": "plot_6"
                  },
                  "plot_7": {
                    "display": 15,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "alertcondition",
                    "trackPrice": false,
                    "title": "plot_7"
                  }
                },
                "bands": {},
                "graphics": {},
                "ohlcPlots": {},
                "palettes": {
                  "palette_0": {
                    "colors": {
                      "0": {
                        "color": "rgba(0,255,187,1)",
                        "style": 0,
                        "width": 2
                      },
                      "1": {
                        "color": "rgba(255,0,157,1)",
                        "style": 0,
                        "width": 2
                      },
                      "2": {
                        "color": "#787B86",
                        "style": 0,
                        "width": 2
                      }
                    }
                  }
                },
                "filledAreasStyle": {
                  "fill_0": {
                    "color": "rgba(0,255,187,0.2)",
                    "transparency": 0,
                    "visible": true
                  },
                  "fill_1": {
                    "color": "rgba(255,0,157,0.2)",
                    "transparency": 0,
                    "visible": true
                  }
                },
                "filledAreas": {},
                "visible": true,
                "showLegendValues": true,
                "showLegendInputs": true,
                "showLabelsOnPriceScale": true,
                "precision": "default",
                "parentSources": []
              },
              "zorder": -40000,
              "ownFirstValue": null,
              "metaInfo": "Script$PUB;ba5b73720a2246cfa19b240dbfce62e0@tv-scripting-101[v.1.0]"
            },
            {
              "type": "StudyStrategy",
              "id": "VwaCEx",
              "state": {
                "inputs": {
                  "in_0": "5.0.3 @ 0.0.3",
                  "in_1": "www.davidd.tech",
                  "in_10": false,
                  "in_100": false,
                  "in_101": 2.6,
                  "in_102": true,
                  "in_103": 3,
                  "in_104": 1,
                  "in_105": false,
                  "in_106": 20,
                  "in_107": false,
                  "in_108": 20,
                  "in_109": false,
                  "in_11": false,
                  "in_110": 20,
                  "in_111": false,
                  "in_112": 20,
                  "in_113": "Percent",
                  "in_114": 8,
                  "in_115": 10,
                  "in_116": true,
                  "in_117": 10,
                  "in_118": 2,
                  "in_119": 100,
                  "in_12": false,
                  "in_120": true,
                  "in_121": true,
                  "in_122": 0.5,
                  "in_123": "Dynamic Algo 2",
                  "in_124": "MACD",
                  "in_125": 0.5,
                  "in_126": 1,
                  "in_127": 1.5,
                  "in_128": "https://youtu.be/4PB227Y_3CY",
                  "in_129": false,
                  "in_13": true,
                  "in_130": "NORMAL",
                  "in_131": 2,
                  "in_132": false,
                  "in_133": 6,
                  "in_134": false,
                  "in_135": 1.1,
                  "in_136": 1.1,
                  "in_137": 1,
                  "in_138": false,
                  "in_139": 1,
                  "in_14": "Both",
                  "in_140": false,
                  "in_141": "Use Percentage Instead",
                  "in_142": 0.8,
                  "in_143": false,
                  "in_144": "Use Percentage Instead",
                  "in_145": 9,
                  "in_146": true,
                  "in_147": "HEMA",
                  "in_148": 70,
                  "in_149": "close",
                  "in_15": true,
                  "in_150": "OFF",
                  "in_151": 1.5,
                  "in_152": 0,
                  "in_153": false,
                  "in_154": false,
                  "in_155": false,
                  "in_156": 60,
                  "in_157": 30,
                  "in_158": 100,
                  "in_159": 60,
                  "in_16": "vObAdA$0",
                  "in_160": 65,
                  "in_161": 100,
                  "in_162": 14,
                  "in_163": "Close over/under MA5",
                  "in_164": false,
                  "in_165": false,
                  "in_166": false,
                  "in_167": false,
                  "in_168": false,
                  "in_169": false,
                  "in_17": "close",
                  "in_170": false,
                  "in_171": "EMA",
                  "in_172": "EMA",
                  "in_173": "EMA",
                  "in_174": "EMA",
                  "in_175": "EMA",
                  "in_176": 9,
                  "in_177": 21,
                  "in_178": 55,
                  "in_179": 100,
                  "in_18": 0,
                  "in_180": 350,
                  "in_181": 100,
                  "in_182": false,
                  "in_183": 5,
                  "in_184": true,
                  "in_185": false,
                  "in_186": false,
                  "in_187": false,
                  "in_188": false,
                  "in_189": false,
                  "in_19": 10,
                  "in_190": false,
                  "in_191": 6000,
                  "in_192": 1000,
                  "in_193": true,
                  "in_194": 150,
                  "in_195": 1,
                  "in_196": false,
                  "in_197": "Standard",
                  "in_198": "close",
                  "in_199": 14,
                  "in_2": "discord.gg/daviddtech",
                  "in_20": "close",
                  "in_200": 75,
                  "in_201": 25,
                  "in_202": "MA",
                  "in_203": 14,
                  "in_204": false,
                  "in_205": false,
                  "in_206": 64,
                  "in_207": "Trending Market",
                  "in_208": false,
                  "in_209": "Normal",
                  "in_21": "close",
                  "in_210": "Static",
                  "in_211": 14,
                  "in_212": 23,
                  "in_213": 200,
                  "in_214": false,
                  "in_215": 14,
                  "in_216": 19,
                  "in_217": 100,
                  "in_218": 2,
                  "in_219": false,
                  "in_22": ">",
                  "in_220": false,
                  "in_221": false,
                  "in_222": "",
                  "in_223": false,
                  "in_224": false,
                  "in_225": "v2",
                  "in_226": 5,
                  "in_227": 0.05,
                  "in_228": -0.05,
                  "in_229": 13,
                  "in_23": "<",
                  "in_230": "ema",
                  "in_231": "ema",
                  "in_232": 3,
                  "in_233": false,
                  "in_234": "hlc3",
                  "in_235": 14,
                  "in_236": 51,
                  "in_237": 49,
                  "in_238": false,
                  "in_239": "",
                  "in_24": "First Indicator",
                  "in_240": false,
                  "in_241": "VWMA",
                  "in_242": 75,
                  "in_243": 30,
                  "in_244": false,
                  "in_245": false,
                  "in_246": "",
                  "in_247": false,
                  "in_248": "close",
                  "in_249": "close",
                  "in_25": "First Indicator",
                  "in_250": 3,
                  "in_251": false,
                  "in_252": 130,
                  "in_253": 0.2,
                  "in_254": 2.5,
                  "in_255": false,
                  "in_256": "",
                  "in_257": false,
                  "in_258": 13,
                  "in_259": false,
                  "in_26": "close",
                  "in_260": "",
                  "in_261": "GMT+1",
                  "in_262": true,
                  "in_263": true,
                  "in_264": true,
                  "in_265": true,
                  "in_266": true,
                  "in_267": true,
                  "in_268": false,
                  "in_269": false,
                  "in_27": "close",
                  "in_270": false,
                  "in_271": false,
                  "in_272": false,
                  "in_273": true,
                  "in_274": false,
                  "in_275": "0300-1200:1234567",
                  "in_276": "0800-1700:1234567",
                  "in_277": false,
                  "in_278": 946684800000,
                  "in_279": 4070908800000,
                  "in_28": 10,
                  "in_280": "Once per bar",
                  "in_281": true,
                  "in_282": true,
                  "in_283": 1751274000000,
                  "in_284": true,
                  "in_285": true,
                  "in_286": true,
                  "in_287": "",
                  "in_288": "For Connections with 3rd Party services.  \n Try www.trigger.trade \n **Placeholders** \n Close : #close# \n TP #LongTP# \n TP1 : #LongTP1#  \n TP2 : #LongTP2# \n FULL : #LongTPFULL# ... \n More on www.davidd.tech/placeholders or MT4 or MT5 TO CONNECT https://davidd.tech/pc  \n\n ",
                  "in_289": "Exit or Close BOT API for exiting LONG positions.",
                  "in_29": 10,
                  "in_290": "For Connections with 3rd Party services. \n  Try www.trigger.trade \n **Placeholders** \n Close : #close# \n TP #ShortTP# \n TP1 : #ShortTP1#  \n TP2 : #ShortTP2# \n FULL : #ShortTPFULL# ... \n More on www.davidd.tech/placeholders or MT4 or MT5 TO CONNECT https://davidd.tech/pc \n\n",
                  "in_291": "Exit or Close BOT API for exiting SHORT positions.",
                  "in_292": "API SERVICES CODE for LONG TP 1",
                  "in_293": "API SERVICES CODE for SHORT TP 1",
                  "in_294": "API SERVICES CODE for LONG TP 2",
                  "in_295": "API SERVICES CODE for SHORT TP 2",
                  "in_296": true,
                  "in_297": "Auto",
                  "in_298": false,
                  "in_299": false,
                  "in_3": "t.me/DaviddTech",
                  "in_30": false,
                  "in_300": true,
                  "in_301": false,
                  "in_302": false,
                  "in_303": false,
                  "in_304": true,
                  "in_305": false,
                  "in_306": false,
                  "in_307": true,
                  "in_308": "rgba(3,77,64,1)",
                  "in_309": "rgba(183,29,29,1)",
                  "in_31": "close",
                  "in_310": "rgba(14,71,161,0.15)",
                  "in_311": " ",
                  "in_312": false,
                  "in_313": false,
                  "in_314": "percent_of_equity",
                  "in_315": 0.055,
                  "in_316": 6,
                  "in_317": "percent",
                  "in_318": 3,
                  "in_319": "USDT",
                  "in_32": "close",
                  "in_320": 100,
                  "in_321": 3000,
                  "in_322": 0,
                  "in_323": false,
                  "in_324": "FIFO",
                  "in_325": 0,
                  "in_326": 0,
                  "in_327": "BACKTEST",
                  "in_328": "",
                  "in_329": "order_fills",
                  "in_33": ">",
                  "in_330": "",
                  "in_331": 2,
                  "in_332": true,
                  "in_333": false,
                  "in_334": false,
                  "in_335": "",
                  "in_34": "<",
                  "in_35": "First Indicator",
                  "in_36": "First Indicator",
                  "in_37": "close",
                  "in_38": "close",
                  "in_39": 10,
                  "in_4": true,
                  "in_40": 10,
                  "in_41": false,
                  "in_42": "close",
                  "in_43": "close",
                  "in_44": ">",
                  "in_45": "<",
                  "in_46": "First Indicator",
                  "in_47": "First Indicator",
                  "in_48": "close",
                  "in_49": "close",
                  "in_5": true,
                  "in_50": 10,
                  "in_51": 10,
                  "in_52": false,
                  "in_53": "close",
                  "in_54": "close",
                  "in_55": ">",
                  "in_56": "<",
                  "in_57": "First Indicator",
                  "in_58": "First Indicator",
                  "in_59": "close",
                  "in_6": true,
                  "in_60": "close",
                  "in_61": 10,
                  "in_62": 10,
                  "in_63": false,
                  "in_64": "close",
                  "in_65": "close",
                  "in_66": ">",
                  "in_67": "<",
                  "in_68": "First Indicator",
                  "in_69": "First Indicator",
                  "in_7": true,
                  "in_70": true,
                  "in_71": "R:R",
                  "in_72": "ATR",
                  "in_73": false,
                  "in_74": 0.5,
                  "in_75": 1.6,
                  "in_76": 2.8,
                  "in_77": 3,
                  "in_78": 2.8,
                  "in_79": 100,
                  "in_8": "NORMAL",
                  "in_80": 200,
                  "in_81": 100,
                  "in_82": 200,
                  "in_83": "vObAdA$2",
                  "in_84": "vObAdA$3",
                  "in_85": 50,
                  "in_86": 60,
                  "in_87": 1.6,
                  "in_88": 1.4,
                  "in_89": 9,
                  "in_9": true,
                  "in_90": 1,
                  "in_91": 2.5,
                  "in_92": "Source",
                  "in_93": "close",
                  "in_94": "close",
                  "in_95": 14,
                  "in_96": false,
                  "in_97": "Close",
                  "in_98": "Instant",
                  "in_99": 15,
                  "pineFeatures": "{\"import\":1,\"strategy\":1,\"plot\":1,\"str\":1,\"array\":1,\"ta\":1,\"math\":1,\"alert\":1,\"line\":1,\"label\":1,\"table\":1,\"request.security\":1}",
                  "pineId": "",
                  "pineVersion": "",
                  "__user_pro_plan": ""
                },
                "styles": {
                  "plot_0": {
                    "color": "#9C27B0",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 4,
                    "plottype": 0,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_0"
                  },
                  "plot_1": {
                    "color": "#FF9800",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 4,
                    "plottype": 0,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_1"
                  },
                  "plot_10": {
                    "color": "#2962ff",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_10"
                  },
                  "plot_12": {
                    "color": "rgba(255,255,255,1)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_12"
                  },
                  "plot_13": {
                    "color": "#2962ff",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_13"
                  },
                  "plot_16": {
                    "color": "rgba(255,235,59,1)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_16"
                  },
                  "plot_17": {
                    "color": "rgba(255,235,59,1)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_17"
                  },
                  "plot_18": {
                    "color": "rgba(0,230,118,1)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_18"
                  },
                  "plot_19": {
                    "color": "rgba(0,230,118,1)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_19"
                  },
                  "plot_2": {
                    "color": "#00E676",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 0,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_2"
                  },
                  "plot_20": {
                    "color": "rgba(255,152,0,1)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_20"
                  },
                  "plot_21": {
                    "color": "rgba(255,152,0,1)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_21"
                  },
                  "plot_22": {
                    "display": 15,
                    "transparency": 0,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "bg_colorer",
                    "trackPrice": false,
                    "title": "plot_22"
                  },
                  "plot_23": {
                    "display": 15,
                    "transparency": 0,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "bg_colorer",
                    "trackPrice": false,
                    "title": "plot_23"
                  },
                  "plot_24": {
                    "display": 15,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "bar_colorer",
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_24"
                  },
                  "plot_25": {
                    "display": 15,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "bar_colorer",
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_25"
                  },
                  "plot_26": {
                    "display": 15,
                    "transparency": 0,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "bg_colorer",
                    "trackPrice": false,
                    "title": "plot_26"
                  },
                  "plot_3": {
                    "color": "#FF5252",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 0,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_3"
                  },
                  "plot_4": {
                    "display": 15,
                    "transparency": 0,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "bg_colorer",
                    "trackPrice": false,
                    "title": "plot_4"
                  },
                  "plot_5": {
                    "display": 15,
                    "transparency": 0,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "bg_colorer",
                    "trackPrice": false,
                    "title": "plot_5"
                  },
                  "plot_6": {
                    "display": 15,
                    "transparency": 0,
                    "color": "#0496FF",
                    "linestyle": 0,
                    "linewidth": 2,
                    "plottype": "bg_colorer",
                    "trackPrice": false,
                    "title": "plot_6"
                  },
                  "plot_7": {
                    "color": "rgba(76,175,80,0.4)",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_7"
                  },
                  "plot_8": {
                    "color": "#2962ff",
                    "display": 15,
                    "linestyle": 0,
                    "linewidth": 1,
                    "plottype": 7,
                    "trackPrice": false,
                    "transparency": 0,
                    "title": "plot_8"
                  }
                },
                "bands": {},
                "graphics": {
                  "dwglabels": {
                    "labels": {
                      "visible": true
                    }
                  },
                  "dwglines": {
                    "lines": {
                      "visible": true
                    }
                  },
                  "dwgtablecells": {
                    "tableCells": {
                      "visible": true
                    }
                  },
                  "dwgtables": {
                    "tables": {
                      "visible": true
                    }
                  }
                },
                "ohlcPlots": {},
                "palettes": {},
                "filledAreasStyle": {
                  "fill_0": {
                    "color": "rgba(255,82,82,0.1)",
                    "transparency": 0,
                    "visible": true
                  },
                  "fill_1": {
                    "color": "#2962ff",
                    "transparency": 0,
                    "visible": true
                  },
                  "fill_2": {
                    "color": "rgba(76,175,80,0.1)",
                    "transparency": 0,
                    "visible": true
                  },
                  "fill_3": {
                    "color": "rgba(255,235,59,0.1)",
                    "transparency": 0,
                    "visible": true
                  },
                  "fill_4": {
                    "color": "rgba(255,235,59,0.1)",
                    "transparency": 0,
                    "visible": true
                  },
                  "fill_5": {
                    "color": "rgba(0,230,118,0.1)",
                    "transparency": 0,
                    "visible": true
                  },
                  "fill_6": {
                    "color": "rgba(0,230,118,0.1)",
                    "transparency": 0,
                    "visible": true
                  },
                  "fill_7": {
                    "color": "rgba(255,152,0,0.05)",
                    "transparency": 0,
                    "visible": true
                  },
                  "fill_8": {
                    "color": "rgba(255,152,0,0.05)",
                    "transparency": 0,
                    "visible": true
                  }
                },
                "filledAreas": {},
                "visible": true,
                "showLegendValues": true,
                "showLegendInputs": true,
                "showLabelsOnPriceScale": true,
                "precision": "default",
                "strategy": {
                  "orders": {
                    "showLabels": true,
                    "showQty": true,
                    "visible": true
                  }
                },
                "parentSources": {}
              },
              "zorder": -30000,
              "ownFirstValue": null,
              "parentSources": [
                "vObAdA",
                "vObAdA",
                "vObAdA"
              ],
              "ownerSource": "vObAdA",
              "metaInfo": "StrategyScript$PUB;69c6abd65d19495e96187f1f1602dbda@tv-scripting-101[v.10.0]"
            }
          ],
          "mainSourceId": "_seriesId",
          "stretchFactor": 2000,
          "leftAxisesState": [],
          "rightAxisesState": [
            {
              "state": {
                "id": "zqCudRkYcov0",
                "m_priceRange": null,
                "m_isAutoScale": true,
                "m_isPercentage": false,
                "m_isIndexedTo100": false,
                "m_isLog": false,
                "m_isLockScale": false,
                "m_isInverted": false,
                "m_topMargin": 0.1,
                "m_bottomMargin": 0.08,
                "alignLabels": true,
                "logFormula": {
                  "logicalOffset": 4,
                  "coordOffset": 0.0001
                },
                "hasCalculatedPriceRange": true
              },
              "sources": [
                "_seriesId",
                "vObAdA",
                "VwaCEx"
              ]
            }
          ],
          "overlayPriceScales": {},
          "priceScaleRatio": null,
          "isCollapsed": false,
          "isMaximized": false,
          "mode": 0
        }
      ],
      "timeScale": {
        "m_barSpacing": 1.777587717765459,
        "m_rightOffset": 10,
        "rightOffsetPercentage": 5,
        "usePercentageRightOffset": false
      },
      "chartProperties": {
        "paneProperties": {
          "backgroundType": "gradient",
          "gridLinesMode": "none",
          "vertGridProperties": {
            "color": "rgba(240, 243, 250, 0.06)"
          },
          "horzGridProperties": {
            "color": "rgba(240, 243, 250, 0.06)"
          },
          "crossHairProperties": {
            "style": 2,
            "transparency": 0,
            "width": 1,
            "color": "#9598A1",
            "color:": "#9598A1",
            "labelBackgroundColor": "#131722"
          },
          "topMargin": 10,
          "bottomMargin": 8,
          "axisProperties": {
            "autoScale": true,
            "autoScaleDisabled": false,
            "lockScale": false,
            "percentage": false,
            "percentageDisabled": false,
            "indexedTo100": false,
            "log": false,
            "logDisabled": false,
            "alignLabels": true,
            "isInverted": false,
            "showSymbolLabels": false,
            "showStudyPlotLabels": true,
            "m_priceRange": {
              "m_maxValue": 1.14728,
              "m_minValue": 1.14304
            },
            "m_isAutoScale": true,
            "m_isPercentage": false,
            "m_isIndexedTo100": false,
            "m_isLog": false,
            "m_isLockScale": false,
            "m_isInverted": false,
            "m_height": 562,
            "m_topMargin": 0.05,
            "m_bottomMargin": 0.05
          },
          "legendProperties": {
            "showStudyArguments": true,
            "showStudyTitles": true,
            "showStudyValues": true,
            "showSeriesTitle": true,
            "showSeriesOHLC": true,
            "showLegend": true,
            "showLastDayChange": false,
            "showBarChange": true,
            "showVolume": false,
            "showBackground": true,
            "showPriceSource": true,
            "backgroundTransparency": 50,
            "showLogo": true,
            "showTradingButtons": true,
            "showTradingButtonsMobile": true,
            "showSeriesLegendCloseOnMobile": true,
            "wrapText": false,
            "showOnlyPriceSource": true
          },
          "separatorColor": "#2A2E39",
          "background": "#131722",
          "backgroundGradientStartColor": "#181C27",
          "backgroundGradientEndColor": "#131722",
          "rightOffset": null,
          "unitedGridProperties": {
            "color": "rgba(240, 243, 250, 0)",
            "style": 0
          },
          "gridProperties": {
            "color": "#e1ecf2",
            "style": 0
          },
          "leftAxisProperties": {
            "autoScale": true,
            "autoScaleDisabled": false,
            "lockScale": false,
            "percentage": false,
            "percentageDisabled": false,
            "indexedTo100": false,
            "log": false,
            "logDisabled": false,
            "alignLabels": true,
            "isInverted": false,
            "showSymbolLabels": false,
            "showStudyPlotLabels": false
          },
          "rightAxisProperties": {
            "autoScale": true,
            "autoScaleDisabled": false,
            "lockScale": false,
            "percentage": false,
            "percentageDisabled": false,
            "indexedTo100": false,
            "log": false,
            "logDisabled": false,
            "alignLabels": true,
            "isInverted": false,
            "showSymbolLabels": false,
            "showStudyPlotLabels": true,
            "m_priceRange": {
              "m_maxValue": 1.14728,
              "m_minValue": 1.14304
            },
            "m_isAutoScale": true,
            "m_isPercentage": false,
            "m_isIndexedTo100": false,
            "m_isLog": false,
            "m_isLockScale": false,
            "m_isInverted": false,
            "m_height": 562,
            "m_topMargin": 0.05,
            "m_bottomMargin": 0.05
          },
          "overlayPropreties": {
            "percentage": false,
            "autoScale": true,
            "log": false,
            "autoScaleDisabled": false,
            "lockScale": false,
            "percentageDisabled": false,
            "logDisabled": false,
            "alignLabels": true,
            "showSymbolLabels": false,
            "showStudyPlotLabels": false
          }
        },
        "scalesProperties": {
          "fontSize": 12,
          "scaleSeriesOnly": false,
          "showSeriesLastValue": true,
          "seriesLastValueMode": 1,
          "showSeriesPrevCloseValue": false,
          "showStudyLastValue": true,
          "showSymbolLabels": false,
          "showStudyPlotLabels": false,
          "showBidAskLabels": false,
          "showPrePostMarketPriceLabel": true,
          "showFundamentalNameLabel": false,
          "showFundamentalLastValue": true,
          "barSpacing": 6,
          "axisHighlightColor": "rgba(41, 98, 255, 0.25)",
          "axisLineToolLabelBackgroundColorCommon": "#2962FF",
          "axisLineToolLabelBackgroundColorActive": "#143EB3",
          "showPriceScaleCrosshairLabel": true,
          "showTimeScaleCrosshairLabel": true,
          "crosshairLabelBgColorLight": "#131722",
          "crosshairLabelBgColorDark": "#363A45",
          "saveLeftEdge": false,
          "textColor": "#B2B5BE",
          "lineColor": "rgba(240, 243, 250, 0)",
          "backgroundColor": "#ffffff",
          "showLeftScale": true,
          "showRightScale": true,
          "showLastValue": true,
          "showSeriesLastValueProperty": true,
          "showStudyLastValueProperty": true,
          "showSeriesPrevCloseValueDisabled": true
        },
        "publishedChartsTimelineProperties": {
          "type": "BarsMarksContainer",
          "id": "PublishedChartsTimeline",
          "zorder": 10000003,
          "pinnedTooltips": {}
        },
        "chartEventsSourceProperties": {
          "visible": true,
          "futureOnly": true,
          "breaks": {
            "color": "#555555",
            "visible": false,
            "style": 2,
            "width": 1
          },
          "currencyFilter": ""
        },
        "tradingProperties": {
          "showPositions": true,
          "positionPL": {
            "visibility": true,
            "display": 0
          },
          "bracketsPL": {
            "visibility": true,
            "display": 0
          },
          "positionAndBracketsPL": true,
          "showOrders": true,
          "showExecutions": true,
          "showExecutionsLabels": false,
          "showReverse": true,
          "horizontalAlignment": 2,
          "extendLeft": true,
          "lineLength": 5,
          "lineWidth": 1,
          "lineStyle": 0,
          "showTPSL": true
        },
        "priceScaleSelectionStrategyName": "auto",
        "inactivityGaps": false
      },
      "sessions": {
        "properties": {
          "sessionHighlight": {
            "backgrounds": {
              "preMarket": {
                "color": "#FF9800",
                "transparency": 92
              },
              "postMarket": {
                "color": "#2962FF",
                "transparency": 92
              },
              "electronic": {
                "color": "#2962FF",
                "transparency": 92
              },
              "outOfSession": {
                "color": "#2962FF",
                "transparency": 92,
                "visible": true,
                "name": "Extended Hours",
                "available": false
              },
              "inSession": {
                "color": "rgba(111, 168, 220, 0.4)",
                "transparency": 60,
                "visible": false,
                "name": "In Session"
              }
            },
            "vertlines": {
              "sessBreaks": {
                "color": "#4985e7",
                "style": 2,
                "visible": false,
                "width": 1,
                "name": "Session Break",
                "available": true
              }
            }
          }
        }
      },
      "version": 3,
      "timezone": "Europe/Athens",
      "shouldBeSavedEvenIfHidden": true,
      "linkingGroup": null,
      "chartId": "2"
    },
    {
      "panes": [
        {
          "sources": [
            {
              "type": "MainSeries",
              "id": "_seriesId",
              "zorder": 0,
              "haStyle": {
                "studyId": "BarSetHeikenAshi@tv-basicstudies-60"
              },
              "renkoStyle": {
                "studyId": "BarSetRenko@tv-prostudies-73"
              },
              "pbStyle": {
                "studyId": "BarSetPriceBreak@tv-prostudies-34"
              },
              "kagiStyle": {
                "studyId": "BarSetKagi@tv-prostudies-73"
              },
              "pnfStyle": {
                "studyId": "BarSetPnF@tv-prostudies-73"
              },
              "rangeStyle": {
                "studyId": "BarSetRange@tv-basicstudies-72"
              },
              "volFootprintStyle": {
                "studyId": "Footprint@tv-volumebyprice-104"
              },
              "tpoStyle": {
                "studyId": "TPOPeriodic@tv-volumebyprice-104"
              },
              "svpStyle": {
                "studyId": "VbPSessions@tv-volumebyprice-126"
              },
              "formattingDeps": {
                "pricescale": 100,
                "minmov": 1,
                "fractional": false,
                "minmove2": 0,
                "variable_tick_size": ""
              },
              "studyBindings": {
                "17": null,
                "18": {},
                "20": null
              },
              "state": {
                "style": 1,
                "esdShowDividends": true,
                "esdShowSplits": true,
                "esdShowEarnings": true,
                "esdShowBreaks": false,
                "esdFlagSize": 2,
                "showContinuousContractSwitches": true,
                "showContinuousContractSwitchesBreaks": false,
                "showFuturesContractExpiration": true,
                "showLastNews": true,
                "showCountdown": true,
                "bidAsk": {
                  "visible": false,
                  "lineStyle": 1,
                  "lineWidth": 1,
                  "bidLineColor": "#2962FF",
                  "askLineColor": "#F7525F"
                },
                "prePostMarket": {
                  "visible": true,
                  "lineStyle": 1,
                  "lineWidth": 1,
                  "preMarketColor": "#FB8C00",
                  "postMarketColor": "#2962FF"
                },
                "highLowAvgPrice": {
                  "highLowPriceLinesVisible": false,
                  "highLowPriceLabelsVisible": false,
                  "averageClosePriceLineVisible": false,
                  "averageClosePriceLabelVisible": false,
                  "highLowPriceLinesWidth": 1,
                  "averagePriceLineWidth": 1,
                  "highLowPriceLinesColor": "",
                  "averagePriceLineColor": ""
                },
                "visible": true,
                "showPriceLine": true,
                "priceLineWidth": 1,
                "showPrevClosePriceLine": false,
                "prevClosePriceLineWidth": 1,
                "minTick": "default",
                "dividendsAdjustment": false,
                "backAdjustment": false,
                "settlementAsClose": true,
                "sessionId": "regular",
                "sessVis": false,
                "statusViewStyle": {
                  "fontSize": 16,
                  "showExchange": true,
                  "showInterval": true,
                  "symbolTextSource": "ticker"
                },
                "candleStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "barColorsOnPrevClose": false,
                  "drawBody": true,
                  "borderColor": "#378658",
                  "upColor": "#089981",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645"
                },
                "volCandlesStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "barColorsOnPrevClose": false,
                  "drawBody": true,
                  "borderColor": "#378658",
                  "upColor": "#089981",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645"
                },
                "hollowCandleStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "drawBody": true,
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "borderColor": "#378658",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645"
                },
                "haStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "showRealLastPrice": false,
                  "barColorsOnPrevClose": false,
                  "inputs": {},
                  "inputInfo": {},
                  "drawBody": true,
                  "borderColor": "#378658",
                  "upColor": "#089981",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645"
                },
                "barStyle": {
                  "barColorsOnPrevClose": false,
                  "dontDrawOpen": false,
                  "thinBars": true,
                  "downColor": "#F23645",
                  "upColor": "#089981"
                },
                "hiloStyle": {
                  "showBorders": true,
                  "showLabels": true,
                  "drawBody": true,
                  "color": "#2962FF",
                  "borderColor": "#2962FF",
                  "labelColor": "#2962FF"
                },
                "columnStyle": {
                  "barColorsOnPrevClose": true,
                  "priceSource": "close",
                  "baselinePosition": "bottom",
                  "upColor": "rgba(8, 153, 129, 0.5)",
                  "downColor": "rgba(242, 54, 69, 0.5)"
                },
                "lineStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "colorType": "solid",
                  "color": "#2962FF",
                  "gradientStartColor": "#D500F9",
                  "gradientEndColor": "#00BCE5"
                },
                "tpoStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "styles": {
                    "splitByBlocks": false,
                    "splitByBlocksMode": 0
                  },
                  "tpo": {
                    "showBlocks": true,
                    "showLetters": true,
                    "nonVaOpacity": 30,
                    "colors": {
                      "gradientColors": [
                        "#e91e63",
                        "#00c853",
                        "#00bcd4",
                        "#651FFF"
                      ]
                    }
                  },
                  "levels": {
                    "showPOC": true,
                    "showPoorHigh": false,
                    "showPoorLow": false,
                    "showSingleprints": false,
                    "showVAH": true,
                    "showVAL": true,
                    "showMidpoint": false,
                    "showOpenPrice": false,
                    "showClosePrice": false,
                    "initialBalanceRange": {
                      "levels": 2,
                      "visible": true
                    },
                    "pocColor": "#0F0F0F",
                    "poorHighColor": "#6200EA",
                    "poorLowColor": "#6200EA",
                    "singleprintsColor": "rgba(224, 64, 251, 0.15)",
                    "vahColor": "#0F0F0F",
                    "valColor": "#0F0F0F"
                  },
                  "volumeProfile": {
                    "visible": true,
                    "showValues": false,
                    "vah": {
                      "visible": false,
                      "linestyle": 0,
                      "linewidth": 2,
                      "color": "#0F0F0F"
                    },
                    "val": {
                      "visible": false,
                      "linestyle": 0,
                      "linewidth": 2,
                      "color": "#0F0F0F"
                    },
                    "poc": {
                      "visible": false,
                      "linestyle": 0,
                      "linewidth": 2,
                      "color": "#0F0F0F"
                    },
                    "placement": "left_to_right",
                    "valuesColor": "#0F0F0F",
                    "volumeColor": "rgba(38, 198, 218, 0.5)",
                    "valueAreaColor": "rgba(38, 198, 218, 0.75)"
                  },
                  "inputs": {
                    "periodsNum": 1,
                    "period": "Day",
                    "blockSize": "30m",
                    "rowSize": "Auto",
                    "ticksPerRow": 10,
                    "vaPercent": 70,
                    "extendPoorHigh": false,
                    "extendPoorLow": false,
                    "extendPOC": false,
                    "extendTpoVah": false,
                    "extendTpoVal": false,
                    "extendVolumePoc": false,
                    "extendVolumeVah": false,
                    "extendVolumeVal": false,
                    "extendSingleprints": false,
                    "mergePoints": "[]"
                  },
                  "summary": {
                    "visible": false,
                    "belowSeries": true,
                    "infoBlocks": {
                      "hlRange": {
                        "visible": false
                      },
                      "pocPrice": {
                        "visible": true
                      },
                      "rotationFactor": {
                        "visible": false
                      },
                      "totalVolume": {
                        "visible": false
                      },
                      "tpoCountAbovePoc": {
                        "visible": false
                      },
                      "tpoCountBelowPoc": {
                        "visible": false
                      },
                      "tpoCountTotal": {
                        "visible": false
                      },
                      "vaRange": {
                        "visible": false
                      },
                      "vahPrice": {
                        "visible": true
                      },
                      "valPrice": {
                        "visible": true
                      },
                      "initialBalanceHigh": {
                        "visible": true
                      },
                      "initialBalanceLow": {
                        "visible": true
                      },
                      "initialBalanceRange": {
                        "visible": true
                      }
                    }
                  },
                  "color": "#2962FF"
                },
                "svpStyle": {
                  "inputs": {
                    "profilesSessions": "All",
                    "customSession": "0930-1600",
                    "customSessionTZ": "Exchange",
                    "volume": "Up/Down",
                    "vaVolume": 70,
                    "extendPocRight": false,
                    "extendVAHRight": false,
                    "extendVALRight": false,
                    "rowsLayout": "Number Of Rows",
                    "rows": 24
                  },
                  "volumeProfile": {
                    "visible": true,
                    "showValues": false,
                    "placement": "left_to_right",
                    "percentWidth": 100,
                    "valuesColor": "#0F0F0F",
                    "volumeColorUp": "rgba(38, 198, 218, 0.5)",
                    "volumeColorDown": "rgba(236, 64, 122, 0.5)",
                    "valueAreaColorUp": "rgba(38, 198, 218, 0.75)",
                    "valueAreaColorDown": "rgba(236, 64, 122, 0.75)",
                    "histogramBoxColor": "rgba(38, 198, 218, 0.05)"
                  },
                  "vah": {
                    "visible": false,
                    "linestyle": 0,
                    "linewidth": 2,
                    "color": "#0F0F0F"
                  },
                  "val": {
                    "visible": false,
                    "linestyle": 0,
                    "linewidth": 2,
                    "color": "#0F0F0F"
                  },
                  "poc": {
                    "visible": true,
                    "linestyle": 0,
                    "linewidth": 2,
                    "color": "#0F0F0F"
                  },
                  "developingPoc": {
                    "visible": false,
                    "linestyle": 0,
                    "linewidth": 1,
                    "color": "#0F0F0F"
                  },
                  "developingVA": {
                    "visible": false,
                    "linestyle": 0,
                    "linewidth": 1,
                    "color": "#00bcd4"
                  }
                },
                "lineWithMarkersStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "colorType": "solid",
                  "color": "#2962FF",
                  "gradientStartColor": "#D500F9",
                  "gradientEndColor": "#00BCE5"
                },
                "steplineStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "colorType": "solid",
                  "color": "#2962FF",
                  "gradientStartColor": "#D500F9",
                  "gradientEndColor": "#00BCE5"
                },
                "areaStyle": {
                  "linestyle": 0,
                  "linewidth": 2,
                  "priceSource": "close",
                  "transparency": 100,
                  "color1": "rgba(41, 98, 255, 0.28)",
                  "color2": "#2962FF",
                  "linecolor": "#2962FF"
                },
                "hlcAreaStyle": {
                  "highLineVisible": true,
                  "highLineStyle": 0,
                  "highLineWidth": 2,
                  "lowLineVisible": true,
                  "lowLineStyle": 0,
                  "lowLineWidth": 2,
                  "closeLineStyle": 0,
                  "closeLineWidth": 2,
                  "highLineColor": "#089981",
                  "lowLineColor": "#F23645",
                  "closeLineColor": "#868993",
                  "highCloseFillColor": "rgba(8, 153, 129, 0.2)",
                  "closeLowFillColor": "rgba(242, 54, 69, 0.2)"
                },
                "renkoStyle": {
                  "inputs": {
                    "source": "close",
                    "sources": "Close",
                    "boxSize": 3,
                    "style": "ATR",
                    "atrLength": 14,
                    "percentageLTP": 1,
                    "wicks": true
                  },
                  "inputInfo": {
                    "source": {
                      "name": "Source"
                    },
                    "sources": {
                      "name": "Source"
                    },
                    "boxSize": {
                      "name": "Box size"
                    },
                    "style": {
                      "name": "Style"
                    },
                    "atrLength": {
                      "name": "ATR length"
                    },
                    "percentageLTP": {
                      "name": "Percentage"
                    },
                    "wicks": {
                      "name": "Wicks"
                    }
                  },
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f",
                  "borderUpColorProjection": "#336854",
                  "borderDownColorProjection": "#7f323f",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645"
                },
                "pbStyle": {
                  "inputs": {
                    "source": "close",
                    "lb": 3
                  },
                  "inputInfo": {
                    "source": {
                      "name": "Source"
                    },
                    "lb": {
                      "name": "Number of line"
                    }
                  },
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f",
                  "borderUpColorProjection": "#336854",
                  "borderDownColorProjection": "#7f323f"
                },
                "kagiStyle": {
                  "inputs": {
                    "source": "close",
                    "style": "ATR",
                    "atrLength": 14,
                    "percentageLTP": 1,
                    "reversalAmount": 1
                  },
                  "inputInfo": {
                    "source": {
                      "name": "Source"
                    },
                    "style": {
                      "name": "Style"
                    },
                    "atrLength": {
                      "name": "ATR length"
                    },
                    "percentageLTP": {
                      "name": "Percentage"
                    },
                    "reversalAmount": {
                      "name": "Reversal amount"
                    }
                  },
                  "downColor": "#F23645",
                  "upColor": "#089981",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f"
                },
                "pnfStyle": {
                  "inputs": {
                    "sources": "Close",
                    "reversalAmount": 3,
                    "boxSize": 1,
                    "style": "ATR",
                    "atrLength": 14,
                    "percentageLTP": 1,
                    "oneStepBackBuilding": false
                  },
                  "inputInfo": {
                    "sources": {
                      "name": "Source"
                    },
                    "boxSize": {
                      "name": "Box size"
                    },
                    "reversalAmount": {
                      "name": "Reversal amount"
                    },
                    "style": {
                      "name": "Style"
                    },
                    "atrLength": {
                      "name": "ATR length"
                    },
                    "percentageLTP": {
                      "name": "Percentage"
                    },
                    "oneStepBackBuilding": {
                      "name": "One step back building"
                    }
                  },
                  "downColor": "#F23645",
                  "upColor": "#089981",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f"
                },
                "baselineStyle": {
                  "topLineWidth": 2,
                  "bottomLineWidth": 2,
                  "priceSource": "close",
                  "transparency": 50,
                  "baseLevelPercentage": 50,
                  "baselineColor": "#758696",
                  "topFillColor1": "rgba(8, 153, 129, 0.28)",
                  "topFillColor2": "rgba(8, 153, 129, 0.05)",
                  "bottomFillColor1": "rgba(242, 54, 69, 0.05)",
                  "bottomFillColor2": "rgba(242, 54, 69, 0.28)",
                  "topLineColor": "#089981",
                  "bottomLineColor": "#F23645"
                },
                "rangeStyle": {
                  "barStyle": 0,
                  "thinBars": true,
                  "inputs": {
                    "range": 10,
                    "phantomBars": false
                  },
                  "inputInfo": {
                    "range": {
                      "name": "Range"
                    },
                    "phantomBars": {
                      "name": "Phantom bars"
                    }
                  },
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "upColorProjection": "#336854",
                  "downColorProjection": "#7f323f",
                  "candlesUpColor": "#089981",
                  "candlesDownColor": "#F23645",
                  "candlesBorderUpColor": "#089981",
                  "candlesBorderDownColor": "#F23645",
                  "candlesWickUpColor": "#089981",
                  "candlesWickDownColor": "#F23645"
                },
                "volFootprintStyle": {
                  "drawWick": true,
                  "drawBorder": true,
                  "barColorsOnPrevClose": false,
                  "drawBody": true,
                  "deltaAdjust": true,
                  "showSummary": true,
                  "type": "Buy and sell",
                  "displayMode": 0,
                  "pointOfControl": true,
                  "imbalanceHighlight": {
                    "visible": true,
                    "buyColor": "#089981",
                    "sellColor": "#F23645"
                  },
                  "inputs": {
                    "rowSize": "Auto",
                    "atrLength": 14,
                    "imbalancePercent": 300,
                    "ticksPerRow": 100,
                    "showVA": true,
                    "vaPercent": 70,
                    "calcStackedImbalance": false,
                    "stackedImbalanceCount": 3
                  },
                  "upColor": "#089981",
                  "downColor": "#F23645",
                  "borderColor": "#378658",
                  "borderUpColor": "#089981",
                  "borderDownColor": "#F23645",
                  "wickColor": "#737375",
                  "wickUpColor": "#089981",
                  "wickDownColor": "#F23645",
                  "bgColors": {
                    "adjBuyBgColors": [
                      "#082621",
                      "#004D40",
                      "#06806B",
                      "#22AB94"
                    ],
                    "adjSellBgColors": [
                      "#331F20",
                      "#991F29",
                      "#CC2F3C",
                      "#F7525F"
                    ],
                    "adjTotalBgColors": [
                      "#142E61",
                      "#143EB3",
                      "#1E53E5",
                      "#3179F5"
                    ],
                    "buyBgColor": "#004D40",
                    "sellBgColor": "#991F29",
                    "totalBgColor": "#143EB3",
                    "pocColor": "#000000"
                  }
                },
                "hlcBarsStyle": {
                  "barColorsOnPrevClose": false,
                  "thinBars": true,
                  "color": "#2962FF"
                },
                "baseLineColor": "#5d606b",
                "prevClosePriceLineColor": "#555555",
                "priceLineColor": "",
                "symbol": "BYBIT:SOLUSDT.P",
                "shortName": "SOLUSDT.P",
                "timeframe": "",
                "interval": "120",
                "unitId": null,
                "currencyId": "XTVCUSDT",
                "priceAxisProperties": {
                  "autoScale": true,
                  "autoScaleDisabled": false,
                  "lockScale": false,
                  "percentage": false,
                  "percentageDisabled": false,
                  "log": false,
                  "logDisabled": false,
                  "alignLabels": true,
                  "isInverted": false,
                  "indexedTo100": false,
                  "showSymbolLabels": false,
                  "showStudyPlotLabels": true,
                  "m_priceRange": {
                    "m_maxValue": 1.14728,
                    "m_minValue": 1.14304
                  },
                  "m_isAutoScale": true,
                  "m_isPercentage": false,
                  "m_isIndexedTo100": false,
                  "m_isLog": false,
                  "m_isLockScale": false,
                  "m_isInverted": false,
                  "m_height": 562,
                  "m_topMargin": 0.05,
                  "m_bottomMargin": 0.05
                }
              }
            }
          ],
          "mainSourceId": "_seriesId",
          "stretchFactor": 2000,
          "leftAxisesState": [],
          "rightAxisesState": [
            {
              "state": {
                "id": "zqCudRkYcov0",
                "m_priceRange": null,
                "m_isAutoScale": true,
                "m_isPercentage": false,
                "m_isIndexedTo100": false,
                "m_isLog": false,
                "m_isLockScale": false,
                "m_isInverted": false,
                "m_topMargin": 0.1,
                "m_bottomMargin": 0.08,
                "alignLabels": true,
                "logFormula": {
                  "logicalOffset": 4,
                  "coordOffset": 0.0001
                },
                "hasCalculatedPriceRange": true
              },
              "sources": [
                "_seriesId"
              ]
            }
          ],
          "overlayPriceScales": {},
          "priceScaleRatio": null,
          "isCollapsed": false,
          "isMaximized": false,
          "mode": 0
        }
      ],
      "timeScale": {
        "m_barSpacing": 1.7704951072819368,
        "m_rightOffset": 10,
        "rightOffsetPercentage": 5,
        "usePercentageRightOffset": false
      },
      "chartProperties": {
        "paneProperties": {
          "backgroundType": "gradient",
          "gridLinesMode": "none",
          "vertGridProperties": {
            "color": "rgba(240, 243, 250, 0.06)"
          },
          "horzGridProperties": {
            "color": "rgba(240, 243, 250, 0.06)"
          },
          "crossHairProperties": {
            "style": 2,
            "transparency": 0,
            "width": 1,
            "color": "#9598A1",
            "color:": "#9598A1",
            "labelBackgroundColor": "#131722"
          },
          "topMargin": 10,
          "bottomMargin": 8,
          "axisProperties": {
            "autoScale": true,
            "autoScaleDisabled": false,
            "lockScale": false,
            "percentage": false,
            "percentageDisabled": false,
            "indexedTo100": false,
            "log": false,
            "logDisabled": false,
            "alignLabels": true,
            "isInverted": false,
            "showSymbolLabels": false,
            "showStudyPlotLabels": true,
            "m_priceRange": {
              "m_maxValue": 1.14728,
              "m_minValue": 1.14304
            },
            "m_isAutoScale": true,
            "m_isPercentage": false,
            "m_isIndexedTo100": false,
            "m_isLog": false,
            "m_isLockScale": false,
            "m_isInverted": false,
            "m_height": 562,
            "m_topMargin": 0.05,
            "m_bottomMargin": 0.05
          },
          "legendProperties": {
            "showStudyArguments": true,
            "showStudyTitles": true,
            "showStudyValues": true,
            "showSeriesTitle": true,
            "showSeriesOHLC": true,
            "showLegend": true,
            "showLastDayChange": false,
            "showBarChange": true,
            "showVolume": false,
            "showBackground": true,
            "showPriceSource": true,
            "backgroundTransparency": 50,
            "showLogo": true,
            "showTradingButtons": true,
            "showTradingButtonsMobile": true,
            "showSeriesLegendCloseOnMobile": true,
            "wrapText": false,
            "showOnlyPriceSource": true
          },
          "separatorColor": "#2A2E39",
          "background": "#131722",
          "backgroundGradientStartColor": "#181C27",
          "backgroundGradientEndColor": "#131722",
          "rightOffset": null,
          "unitedGridProperties": {
            "color": "rgba(240, 243, 250, 0)",
            "style": 0
          },
          "gridProperties": {
            "color": "#e1ecf2",
            "style": 0
          },
          "leftAxisProperties": {
            "autoScale": true,
            "autoScaleDisabled": false,
            "lockScale": false,
            "percentage": false,
            "percentageDisabled": false,
            "indexedTo100": false,
            "log": false,
            "logDisabled": false,
            "alignLabels": true,
            "isInverted": false,
            "showSymbolLabels": false,
            "showStudyPlotLabels": false
          },
          "rightAxisProperties": {
            "autoScale": true,
            "autoScaleDisabled": false,
            "lockScale": false,
            "percentage": false,
            "percentageDisabled": false,
            "indexedTo100": false,
            "log": false,
            "logDisabled": false,
            "alignLabels": true,
            "isInverted": false,
            "showSymbolLabels": false,
            "showStudyPlotLabels": true,
            "m_priceRange": {
              "m_maxValue": 1.14728,
              "m_minValue": 1.14304
            },
            "m_isAutoScale": true,
            "m_isPercentage": false,
            "m_isIndexedTo100": false,
            "m_isLog": false,
            "m_isLockScale": false,
            "m_isInverted": false,
            "m_height": 562,
            "m_topMargin": 0.05,
            "m_bottomMargin": 0.05
          },
          "overlayPropreties": {
            "percentage": false,
            "autoScale": true,
            "log": false,
            "autoScaleDisabled": false,
            "lockScale": false,
            "percentageDisabled": false,
            "logDisabled": false,
            "alignLabels": true,
            "showSymbolLabels": false,
            "showStudyPlotLabels": false
          }
        },
        "scalesProperties": {
          "fontSize": 12,
          "scaleSeriesOnly": false,
          "showSeriesLastValue": true,
          "seriesLastValueMode": 1,
          "showSeriesPrevCloseValue": false,
          "showStudyLastValue": true,
          "showSymbolLabels": false,
          "showStudyPlotLabels": false,
          "showBidAskLabels": false,
          "showPrePostMarketPriceLabel": true,
          "showFundamentalNameLabel": false,
          "showFundamentalLastValue": true,
          "barSpacing": 6,
          "axisHighlightColor": "rgba(41, 98, 255, 0.25)",
          "axisLineToolLabelBackgroundColorCommon": "#2962FF",
          "axisLineToolLabelBackgroundColorActive": "#143EB3",
          "showPriceScaleCrosshairLabel": true,
          "showTimeScaleCrosshairLabel": true,
          "crosshairLabelBgColorLight": "#131722",
          "crosshairLabelBgColorDark": "#363A45",
          "saveLeftEdge": false,
          "textColor": "#B2B5BE",
          "lineColor": "rgba(240, 243, 250, 0)",
          "backgroundColor": "#ffffff",
          "showLeftScale": true,
          "showRightScale": true,
          "showLastValue": true,
          "showSeriesLastValueProperty": true,
          "showStudyLastValueProperty": true,
          "showSeriesPrevCloseValueDisabled": true
        },
        "publishedChartsTimelineProperties": {
          "type": "BarsMarksContainer",
          "id": "PublishedChartsTimeline",
          "zorder": 10000003,
          "pinnedTooltips": {}
        },
        "chartEventsSourceProperties": {
          "visible": true,
          "futureOnly": true,
          "breaks": {
            "color": "#555555",
            "visible": false,
            "style": 2,
            "width": 1
          },
          "currencyFilter": ""
        },
        "tradingProperties": {
          "showPositions": true,
          "positionPL": {
            "visibility": true,
            "display": 0
          },
          "bracketsPL": {
            "visibility": true,
            "display": 0
          },
          "showOrders": true,
          "showExecutions": true,
          "showExecutionsLabels": false,
          "showReverse": true,
          "horizontalAlignment": 2,
          "extendLeft": true,
          "lineLength": 5,
          "lineWidth": 1,
          "lineStyle": 0,
          "showTPSL": true
        },
        "priceScaleSelectionStrategyName": "auto",
        "inactivityGaps": false
      },
      "sessions": {
        "properties": {
          "sessionHighlight": {
            "backgrounds": {
              "preMarket": {
                "color": "#FF9800",
                "transparency": 92
              },
              "postMarket": {
                "color": "#2962FF",
                "transparency": 92
              },
              "electronic": {
                "color": "#2962FF",
                "transparency": 92
              },
              "outOfSession": {
                "color": "#2962FF",
                "transparency": 92,
                "visible": true,
                "name": "Extended Hours",
                "available": false
              },
              "inSession": {
                "color": "rgba(111, 168, 220, 0.4)",
                "transparency": 60,
                "visible": false,
                "name": "In Session"
              }
            },
            "vertlines": {
              "sessBreaks": {
                "color": "#4985e7",
                "style": 2,
                "visible": false,
                "width": 1,
                "name": "Session Break",
                "available": true
              }
            }
          }
        }
      },
      "version": 3,
      "timezone": "Europe/Athens",
      "shouldBeSavedEvenIfHidden": true,
      "linkingGroup": null,
      "chartId": "1"
    }
  ],
  "symbolLock": 0,
  "intervalLock": 0,
  "trackTimeLock": 0,
  "dateRangeLock": 0,
  "crosshairLock": 1,
  "layoutsSizes": {
    "s": [
      {
        "percent": 1
      }
    ],
    "2h": [
      {
        "percent": 0.5
      },
      {
        "percent": 0.5
      }
    ],
    "2-1": [
      {
        "percent": 0.5,
        "substate": [
          {
            "percent": 0.5
          },
          {
            "percent": 0.5
          }
        ]
      },
      {
        "percent": 0.5
      }
    ],
    "3h": [
      {
        "percent": 0.3333333333333333
      },
      {
        "percent": 0.3333333333333333
      },
      {
        "percent": 0.3333333333333333
      }
    ],
    "4h": [
      {
        "percent": 0.25
      },
      {
        "percent": 0.25
      },
      {
        "percent": 0.25
      },
      {
        "percent": 0.25
      }
    ]
  },
  "studyMetaInfoMap": {
    "Script$PUB;ba5b73720a2246cfa19b240dbfce62e0@tv-scripting-101[v.1.0]": {
      "palettes": {
        "palette_0": {
          "colors": {
            "0": {
              "name": "Color 0"
            },
            "1": {
              "name": "Color 1"
            },
            "2": {
              "name": "Color 2"
            }
          },
          "valToIndex": {
            "0": 0,
            "1": 1,
            "2": 2
          }
        }
      },
      "inputs": [
        {
          "defval": "bmI9Ks46_Nkst13lKuFR3vNgbCOFfAA==_s8N8KWCffn5NexKyUUF8Ex1sDy/+X7GTK0hUcClA4pFyuH6tv4IWWF7Su0OJnCw7RTWLpTeVkZA60LfteUQawN/3oewVgLFL0fJqlBjlobvHt0NLHgwrEqFWuNVmHxo50hIf8oqQlwGgRSxIP1eTRshbhyMOiCXPegRBrmVoTKfpUTB85JPQRk3lK6SP61ct5AXmb9Xb9l6lMP7Nc+UiSEMrZkoKJEAOZNrGmsiSkBEnFzry5Ez7wMYWkRrK5t5Lv7Vf6CBQJSStvtiQqvReXTzpKxs4cwM5fgoGmCfgy8xbgTSzorSsAcibDf9MhlfaI+Cuuts1lmLJXs04hXsENuz5E2H0IOTR1pcbEWa5HFWAtNQ3vg6+eeenCUjdxjYpHUpm3Sy7XuSt1JLKJXX27ntA0ioKs/J3GAUyW3fPoVoxQzXnWDXF3Euhr9BLByNcsbCEIfjhIS5pLwiRNK4Pl3I7b8DVK3fpgA+kGQou0/54Q6kzgPCZ7cEIRdNwyrh7vjDgv3KQj0qyF5FYrFrRMftv2hiQHZxtYK9Dh48P0MTYYZ40Mz8BkDOQpQX6apMEZuZBvgriUhnBEl/7EO2B05P5zsY3XPQG79honOf5uFv59PZTu49BK+rMUvDZSOMWvW+sJY8I3oDfvi/LWGqzm5yLVoBqfZAsMa7e5SlaLW0wSDY9snhpytNuYJBV9qNrnEAs8Rjk0zm24f5ySe9IhmwntFvZ1sm6Uito3Zq3smZ1FADGHkd+L8+w8hdTgKKhxaMZVnk4ZUEpFm41SO3nlmtp8rgwA32TT2JQcQjU+lf1LtXUM750LCcr6nvQaApNekgDf6Czt4z1cNT96/zFbULZeFyhESjOjlGmZE1hSfgD3+z+QjK6K0owMrsMU+D+KBKJALd3PiWPbKUOytXxncTJM0fZXnqCbuzIxvKMh86y3KMcmKtKWp/LAB5bxnm4SmGxhYIP6+p+9eSqRfnY/n2g0nfs85BOdzNWJs0y77+kvRc5L/Iximu/NuGV/6T+phR3wlni+b/zHz2wY837Mi5bFZXspD53G1nS/YZ2k7qlESSt151DxAirtnWnl5eMPjQi6MLIbTZCKVgOtjwpqrIV",
          "id": "text",
          "isHidden": true,
          "name": "ILScript",
          "type": "text",
          "display": 15
        },
        {
          "defval": "",
          "id": "pineId",
          "isHidden": true,
          "name": "pineId",
          "type": "text",
          "display": 15
        },
        {
          "defval": "",
          "id": "pineVersion",
          "isHidden": true,
          "name": "pineVersion",
          "type": "text",
          "display": 15
        },
        {
          "defval": "{\"indicator\":1,\"plot\":1,\"ta\":1,\"alertcondition\":1}",
          "id": "pineFeatures",
          "isFake": true,
          "isHidden": true,
          "name": "pineFeatures",
          "type": "text",
          "display": 15
        },
        {
          "defval": 87,
          "display": 15,
          "group": "Lsma ATR | viResearch",
          "id": "in_0",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Lsma len",
          "type": "integer"
        },
        {
          "defval": "close",
          "display": 15,
          "group": "Lsma ATR | viResearch",
          "id": "in_1",
          "isFake": true,
          "name": "Lsma source",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": 14,
          "display": 15,
          "group": "Lsma ATR | viResearch",
          "id": "in_2",
          "isFake": true,
          "name": "ATR len",
          "type": "integer"
        },
        {
          "defval": "",
          "group": "Calculation",
          "id": "in_3",
          "isFake": true,
          "isMTFResolution": true,
          "name": "Timeframe",
          "solutionId": 43000591555,
          "type": "resolution",
          "display": 15
        },
        {
          "defval": true,
          "group": "Calculation",
          "id": "in_4",
          "isFake": true,
          "isMTFGaps": true,
          "name": "Wait for timeframe closes",
          "type": "bool",
          "display": 0
        },
        {
          "defval": false,
          "id": "__profile",
          "isFake": true,
          "isHidden": true,
          "migrate": true,
          "name": "",
          "type": "bool",
          "display": 0
        }
      ],
      "plots": [
        {
          "id": "plot_0",
          "type": "line"
        },
        {
          "id": "plot_1",
          "palette": "palette_0",
          "target": "plot_0",
          "type": "colorer"
        },
        {
          "id": "plot_2",
          "type": "line"
        },
        {
          "id": "plot_3",
          "type": "line"
        },
        {
          "id": "plot_4",
          "type": "line"
        },
        {
          "id": "plot_5",
          "type": "line"
        },
        {
          "id": "plot_6",
          "type": "alertcondition"
        },
        {
          "id": "plot_7",
          "type": "alertcondition"
        }
      ],
      "graphics": {},
      "defaults": {
        "filledAreasStyle": {
          "fill_0": {
            "color": "rgba(0,255,187,0.2)",
            "transparency": 0,
            "visible": true
          },
          "fill_1": {
            "color": "rgba(255,0,157,0.2)",
            "transparency": 0,
            "visible": true
          }
        },
        "inputs": {
          "__profile": false,
          "in_0": 87,
          "in_1": "close",
          "in_2": 14,
          "in_3": "",
          "in_4": true,
          "pineFeatures": "{\"indicator\":1,\"plot\":1,\"ta\":1,\"alertcondition\":1}",
          "pineId": "",
          "pineVersion": "",
          "text": "bmI9Ks46_Nkst13lKuFR3vNgbCOFfAA==_s8N8KWCffn5NexKyUUF8Ex1sDy/+X7GTK0hUcClA4pFyuH6tv4IWWF7Su0OJnCw7RTWLpTeVkZA60LfteUQawN/3oewVgLFL0fJqlBjlobvHt0NLHgwrEqFWuNVmHxo50hIf8oqQlwGgRSxIP1eTRshbhyMOiCXPegRBrmVoTKfpUTB85JPQRk3lK6SP61ct5AXmb9Xb9l6lMP7Nc+UiSEMrZkoKJEAOZNrGmsiSkBEnFzry5Ez7wMYWkRrK5t5Lv7Vf6CBQJSStvtiQqvReXTzpKxs4cwM5fgoGmCfgy8xbgTSzorSsAcibDf9MhlfaI+Cuuts1lmLJXs04hXsENuz5E2H0IOTR1pcbEWa5HFWAtNQ3vg6+eeenCUjdxjYpHUpm3Sy7XuSt1JLKJXX27ntA0ioKs/J3GAUyW3fPoVoxQzXnWDXF3Euhr9BLByNcsbCEIfjhIS5pLwiRNK4Pl3I7b8DVK3fpgA+kGQou0/54Q6kzgPCZ7cEIRdNwyrh7vjDgv3KQj0qyF5FYrFrRMftv2hiQHZxtYK9Dh48P0MTYYZ40Mz8BkDOQpQX6apMEZuZBvgriUhnBEl/7EO2B05P5zsY3XPQG79honOf5uFv59PZTu49BK+rMUvDZSOMWvW+sJY8I3oDfvi/LWGqzm5yLVoBqfZAsMa7e5SlaLW0wSDY9snhpytNuYJBV9qNrnEAs8Rjk0zm24f5ySe9IhmwntFvZ1sm6Uito3Zq3smZ1FADGHkd+L8+w8hdTgKKhxaMZVnk4ZUEpFm41SO3nlmtp8rgwA32TT2JQcQjU+lf1LtXUM750LCcr6nvQaApNekgDf6Czt4z1cNT96/zFbULZeFyhESjOjlGmZE1hSfgD3+z+QjK6K0owMrsMU+D+KBKJALd3PiWPbKUOytXxncTJM0fZXnqCbuzIxvKMh86y3KMcmKtKWp/LAB5bxnm4SmGxhYIP6+p+9eSqRfnY/n2g0nfs85BOdzNWJs0y77+kvRc5L/Iximu/NuGV/6T+phR3wlni+b/zHz2wY837Mi5bFZXspD53G1nS/YZ2k7qlESSt151DxAirtnWnl5eMPjQi6MLIbTZCKVgOtjwpqrIV"
        },
        "palettes": {
          "palette_0": {
            "colors": {
              "0": {
                "color": "rgba(0,255,187,1)",
                "style": 0,
                "width": 2
              },
              "1": {
                "color": "rgba(255,0,157,1)",
                "style": 0,
                "width": 2
              },
              "2": {
                "color": "#787B86",
                "style": 0,
                "width": 2
              }
            }
          }
        },
        "styles": {
          "plot_0": {
            "color": "#2962ff",
            "display": 15,
            "linestyle": 0,
            "linewidth": 2,
            "plottype": 0,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_2": {
            "color": "rgba(0,255,187,0)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 0,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_3": {
            "color": "rgba(0,255,187,0)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 0,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_4": {
            "color": "rgba(0,255,187,0)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 0,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_5": {
            "color": "rgba(0,255,187,0)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 0,
            "trackPrice": false,
            "transparency": 0
          }
        }
      },
      "_metainfoVersion": 54,
      "behind_chart": true,
      "description": "Lsma ATR | viResearch",
      "docs": "",
      "filledAreas": [
        {
          "fillgaps": false,
          "id": "fill_0",
          "isHidden": false,
          "objAId": "plot_2",
          "objBId": "plot_3",
          "title": "Plots Background",
          "type": "plot_plot"
        },
        {
          "fillgaps": false,
          "id": "fill_1",
          "isHidden": false,
          "objAId": "plot_4",
          "objBId": "plot_5",
          "title": "Plots Background",
          "type": "plot_plot"
        }
      ],
      "format": {
        "type": "inherit"
      },
      "historyCalculationMayChange": true,
      "id": "Script$PUB;ba5b73720a2246cfa19b240dbfce62e0@tv-scripting-101",
      "isMTFGaps": true,
      "isMTFResolution": true,
      "isTVScript": true,
      "isTVScriptStub": false,
      "is_hidden_study": false,
      "is_price_study": true,
      "pine": {
        "digest": "cbc4e4c9b37db418301671bea95fedd9282dd2d0",
        "version": "1.0"
      },
      "scriptIdPart": "PUB;ba5b73720a2246cfa19b240dbfce62e0",
      "shortDescription": "Lsma ATR | viResearch",
      "styles": {
        "plot_0": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "lsma"
        },
        "plot_2": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Plot"
        },
        "plot_3": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Plot"
        },
        "plot_4": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Plot"
        },
        "plot_5": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Plot"
        },
        "plot_6": {
          "text": "Lsma ATR Long {{exchange}}:{{ticker}}",
          "title": "Lsma ATR Long"
        },
        "plot_7": {
          "text": "Lsma ATR Short {{exchange}}:{{ticker}}",
          "title": "Lsma ATR Short"
        }
      },
      "usesPrivateLib": false,
      "warnings": [],
      "shortId": "Script$PUB;ba5b73720a2246cfa19b240dbfce62e0",
      "packageId": "tv-scripting",
      "version": 101,
      "fullId": "Script$PUB;ba5b73720a2246cfa19b240dbfce62e0@tv-scripting-101",
      "productId": "tv-scripting",
      "_serverMetaInfoVersion": 54
    },
    "StrategyScript$PUB;69c6abd65d19495e96187f1f1602dbda@tv-scripting-101[v.10.0]": {
      "palettes": {},
      "inputs": [
        {
          "defval": "bmI9Ks46_6/eroK49BWeQBvsHzbhVxw==",
          "id": "text",
          "isHidden": true,
          "name": "ILScript",
          "type": "text",
          "display": 15
        },
        {
          "defval": "",
          "id": "pineId",
          "isHidden": true,
          "name": "pineId",
          "type": "text",
          "display": 15
        },
        {
          "defval": "",
          "id": "pineVersion",
          "isHidden": true,
          "name": "pineVersion",
          "type": "text",
          "display": 15
        },
        {
          "defval": "{\"import\":1,\"strategy\":1,\"plot\":1,\"str\":1,\"array\":1,\"ta\":1,\"math\":1,\"alert\":1,\"line\":1,\"label\":1,\"table\":1,\"request.security\":1}",
          "id": "pineFeatures",
          "isFake": true,
          "isHidden": true,
          "name": "pineFeatures",
          "type": "text",
          "display": 15
        },
        {
          "defval": "5.0.3 @ 0.0.3",
          "display": 15,
          "group": " ▓▓▓    Welcome",
          "id": "in_0",
          "isFake": true,
          "name": "Core Boilerplate Version",
          "options": [
            "5.0.3 @ 0.0.3"
          ],
          "type": "text"
        },
        {
          "defval": "www.davidd.tech",
          "display": 15,
          "group": " ▓▓▓    Welcome",
          "id": "in_1",
          "isFake": true,
          "name": "  Visit Davidd.tech for More Info",
          "type": "text"
        },
        {
          "defval": "discord.gg/daviddtech",
          "display": 15,
          "group": " ▓▓▓    Welcome",
          "id": "in_2",
          "isFake": true,
          "name": "  Join our discord",
          "type": "text"
        },
        {
          "defval": "t.me/DaviddTech",
          "display": 15,
          "group": " ▓▓▓    Welcome",
          "id": "in_3",
          "isFake": true,
          "name": "  Join our telegram",
          "type": "text"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓     Trade Type ",
          "id": "in_4",
          "isFake": true,
          "name": "Long Trades",
          "tooltip": "Turn on/off long trades. Perhaps you are overall bearish and wish to exempt long trades on this asset",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓     Trade Type ",
          "id": "in_5",
          "isFake": true,
          "name": "Short Trades",
          "tooltip": "Turn on/off short trades. Perhaps you are overall bullish and wish to exempt long trades on this asset",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    Welcome",
          "id": "in_6",
          "isFake": true,
          "name": "Hide welcome message (READ TOOLTIP)",
          "tooltip": "By click this you will activate this strategy, allowing you access to all the features and at the same time agreeing with terms of use found here : https://davidd.tech/terms/. Davidd and Davidd.Tech strategies are for educational purposes and can not be taken responsible for any losses.",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    Welcome",
          "id": "in_7",
          "isFake": true,
          "name": "Optimiser MODE 🚀",
          "tooltip": "Enable Optimiser MODE to hide all graphics and speed up the optimization process.\n\n",
          "type": "bool"
        },
        {
          "defval": "NORMAL",
          "display": 15,
          "group": " ▓▓▓     Trade Type ",
          "id": "in_8",
          "isFake": true,
          "name": "Trade type",
          "options": [
            "NORMAL",
            "Hedge Mode",
            "Pyramiding Mode"
          ],
          "tooltip": "Choose the trade type for your strategy.\n\nNORMAL: Enter trades when no other trades are active.\n\nHedge Mode: Allows two trades in opposite directions.\n\nPyramiding Mode: Takes all signals up to the specified maximum trades.",
          "type": "text"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓     Trade variables",
          "id": "in_9",
          "isFake": true,
          "name": "Use Limit exit",
          "tooltip": "Turns on/off the limit exit method. eg: using trail and not setting a limit exit. Must use trail, or strategy has no exit criteria",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Trade variables",
          "id": "in_10",
          "isFake": true,
          "name": "Allow Reversal Trades",
          "tooltip": "Allows a reversal trade. eg. flipping short from a long pos. False will isolate trades from one another, while true allows an opposite bias entry while in a position already",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Trade variables",
          "id": "in_11",
          "isFake": true,
          "name": "Close trade on reverse strategy",
          "tooltip": "Allows a reversal trade. eg. flipping short from a long pos. False will isolate trades from one another, while true allows an opposite bias entry while in a position already",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Trade variables",
          "id": "in_12",
          "isFake": true,
          "name": "Wait for confirmation of new entry on reversal",
          "tooltip": "Allows a reversal trade. eg. flipping short from a long pos. False will isolate trades from one another, while true allows an opposite bias entry while in a position already",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓     Trade variables",
          "id": "in_13",
          "isFake": true,
          "name": "Wait for isBarConfirmed?",
          "tooltip": "Enable this option to wait for the last tick to confirm on the bar.",
          "type": "bool"
        },
        {
          "defval": "Both",
          "display": 15,
          "group": " ▓▓▓    Your Strategy Entry",
          "id": "in_14",
          "isFake": true,
          "name": "Direction",
          "options": [
            "Long",
            "Short",
            "Both"
          ],
          "type": "text"
        },
        {
          "defval": true,
          "display": 0,
          "id": "in_15",
          "isFake": true,
          "name": "============ MAIN STRATEGY SETTING START ============",
          "tooltip": "Anything below this line until the next break is considered exclusive to this strategy. Each strategy is different and this is the area where the different indicators are changed outside of the boilerplate.",
          "type": "bool"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_16",
          "isFake": true,
          "name": "⚙️ First Indicator 🤑",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_17",
          "isFake": true,
          "name": "⚙️ Second Indicator 🤑 (Optional)",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_18",
          "inline": "entry_1_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level 🤑 L🟢",
          "type": "float"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_19",
          "inline": "entry_1_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level 🤑 S🔴",
          "type": "float"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_20",
          "inline": "entry_1_entrylong_opcontre",
          "isFake": true,
          "name": "🧠 Base L🟢 🤑",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_21",
          "inline": "entry_1_entryshort_opcontre",
          "isFake": true,
          "name": "🧠 Base S🔴 🤑",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": ">",
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_22",
          "inline": "entry_1_entrylong_opcontre",
          "isFake": true,
          "name": " 🤑 L🟢 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "<",
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_23",
          "inline": "entry_1_entryshort_opcontre",
          "isFake": true,
          "name": " 🤑 S🔴 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_24",
          "inline": "entry_1_entrylong_opcontre",
          "isFake": true,
          "name": "  └─> 🤑 This: L🟢",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Entry Settings - Indicator 🤑",
          "id": "in_25",
          "inline": "entry_1_entryshort_opcontre",
          "isFake": true,
          "name": "  └─> 🤑 This: S🔴",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_26",
          "isFake": true,
          "name": "⚙️ First Indicator #1",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_27",
          "isFake": true,
          "name": "⚙️ Second Indicator #1 (Optional)",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_28",
          "inline": "indi_1_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level #1 L🟢",
          "type": "float"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_29",
          "inline": "indi_1_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level #1 S🔴",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_30",
          "isFake": true,
          "name": " ▓▓▓ 🧠 Acitivate #1 🧠  ▓▓▓",
          "type": "bool"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_31",
          "inline": "indi_1_entrylong_opcontre",
          "isFake": true,
          "name": "🧠 Base L🟢 #1",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_32",
          "inline": "indi_1_entryshort_opcontre",
          "isFake": true,
          "name": "🧠 Base S🔴 #1",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": ">",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_33",
          "inline": "indi_1_entrylong_opcontre",
          "isFake": true,
          "name": " #1 L🟢 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "<",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_34",
          "inline": "indi_1_entryshort_opcontre",
          "isFake": true,
          "name": " #1 S🔴 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_35",
          "inline": "indi_1_entrylong_opcontre",
          "isFake": true,
          "name": "  └─> #1 This: L🟢",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #1",
          "id": "in_36",
          "inline": "indi_1_entryshort_opcontre",
          "isFake": true,
          "name": "  └─> #1 This: S🔴",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_37",
          "isFake": true,
          "name": "⚙️ First Indicator #2",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_38",
          "isFake": true,
          "name": "⚙️ Second Indicator #2 (Optional)",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_39",
          "inline": "indi_2_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level #2 L🟢",
          "type": "float"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_40",
          "inline": "indi_2_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level #2 S🔴",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_41",
          "isFake": true,
          "name": " ▓▓▓ 🧠 Acitivate #2 🧠  ▓▓▓",
          "type": "bool"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_42",
          "inline": "indi_2_entrylong_opcontre",
          "isFake": true,
          "name": "🧠 Base L🟢 #2",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_43",
          "inline": "indi_2_entryshort_opcontre",
          "isFake": true,
          "name": "🧠 Base S🔴 #2",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": ">",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_44",
          "inline": "indi_2_entrylong_opcontre",
          "isFake": true,
          "name": " #2 L🟢 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "<",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_45",
          "inline": "indi_2_entryshort_opcontre",
          "isFake": true,
          "name": " #2 S🔴 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_46",
          "inline": "indi_2_entrylong_opcontre",
          "isFake": true,
          "name": "  └─> #2 This: L🟢",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #2",
          "id": "in_47",
          "inline": "indi_2_entryshort_opcontre",
          "isFake": true,
          "name": "  └─> #2 This: S🔴",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_48",
          "isFake": true,
          "name": "⚙️ First Indicator #3",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_49",
          "isFake": true,
          "name": "⚙️ Second Indicator #3 (Optional)",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_50",
          "inline": "indi_3_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level #3 L🟢",
          "type": "float"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_51",
          "inline": "indi_3_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level #3 S🔴",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_52",
          "isFake": true,
          "name": " ▓▓▓ 🧠 Acitivate #3 🧠  ▓▓▓",
          "type": "bool"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_53",
          "inline": "indi_3_entrylong_opcontre",
          "isFake": true,
          "name": "🧠 Base L🟢 #3",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_54",
          "inline": "indi_3_entryshort_opcontre",
          "isFake": true,
          "name": "🧠 Base S🔴 #3",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": ">",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_55",
          "inline": "indi_3_entrylong_opcontre",
          "isFake": true,
          "name": " #3 L🟢 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "<",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_56",
          "inline": "indi_3_entryshort_opcontre",
          "isFake": true,
          "name": " #3 S🔴 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_57",
          "inline": "indi_3_entrylong_opcontre",
          "isFake": true,
          "name": "  └─> #3 This: L🟢",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Confluence Settings - Indicator #3",
          "id": "in_58",
          "inline": "indi_3_entryshort_opcontre",
          "isFake": true,
          "name": "  └─> #3 This: S🔴",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_59",
          "isFake": true,
          "name": "⚙️ First Indicator ❌",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_60",
          "isFake": true,
          "name": "⚙️ Second Indicator ❌ (Optional)",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_61",
          "inline": "exit_1_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level ❌ L🟢",
          "type": "float"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_62",
          "inline": "exit_1_base_fixed",
          "isFake": true,
          "name": "⚙️ Fixed Level ❌ S🔴",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_63",
          "isFake": true,
          "name": " ▓▓▓ 🧠 Activate Force Exit ❌ 🧠  ▓▓▓",
          "type": "bool"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_64",
          "inline": "exit_1_entrylong_opcontre",
          "isFake": true,
          "name": "🧠 Base L🟢 ❌",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_65",
          "inline": "exit_1_entryshort_opcontre",
          "isFake": true,
          "name": "🧠 Base S🔴 ❌",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "ohlc4",
            "hlcc4",
            "First Indicator Value",
            "Second Indicator Value"
          ],
          "tooltip": "Source for Entry",
          "type": "text"
        },
        {
          "defval": ">",
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_66",
          "inline": "exit_1_entrylong_opcontre",
          "isFake": true,
          "name": " ❌ L🟢 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "<",
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_67",
          "inline": "exit_1_entryshort_opcontre",
          "isFake": true,
          "name": " ❌ S🔴 is:",
          "options": [
            "-------------------------------------------------",
            "Enter when price crosses above Indicator",
            "Enter when price crosses below Indicator",
            "--------------------------------------------------",
            "Regular Divergence",
            "Hidden Divergence",
            "----------------------------------------------------",
            "Enter when indicator crosses above level",
            "Enter when indicator crosses below level",
            "==",
            "<",
            ">",
            "<=",
            ">=",
            "!=",
            "crossover",
            "crossunder",
            "mod2==",
            "mod3==",
            "mod10==",
            "mod100==",
            "/10==",
            "noop"
          ],
          "tooltip": "Define the condition between extranal input  for setting the start long deal signal.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_68",
          "inline": "exit_1_entrylong_opcontre",
          "isFake": true,
          "name": "  └─> ❌ This: L🟢",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": "First Indicator",
          "display": 15,
          "group": " ▓▓▓    Force Exit Settings - Indicator ❌",
          "id": "in_69",
          "inline": "exit_1_entryshort_opcontre",
          "isFake": true,
          "name": "  └─> ❌ This: S🔴",
          "options": [
            "First Indicator",
            "Second Indicator",
            "Fixed Level",
            "▓▓▓▓▓▓"
          ],
          "tooltip": "Source for Entry, NOTE: If using Fixed level the indicator choosen becomes the base.",
          "type": "text"
        },
        {
          "defval": true,
          "display": 0,
          "id": "in_70",
          "isFake": true,
          "name": "============ MAIN STRATEGY SETTING /END ============",
          "type": "bool"
        },
        {
          "defval": "R:R",
          "display": 15,
          "group": " ▓▓▓    👋 Exit Strategy",
          "id": "in_71",
          "isFake": true,
          "name": "Type of Take Profit",
          "options": [
            "None",
            "Fixed Percent",
            "R:R",
            "Structure HH/LL",
            "Structure High/Low",
            "PIPS",
            "Mean",
            "Custom"
          ],
          "tooltip": "Fixed Percentage - A hard stop loss set at a fixed percentage.\n\nR:R - Risk to Reward ratio calculated with the stop loss.\n\nStructure HH/LL - Refers to using the highest high (HH) or lowest low (LL) of the price structure as a reference for setting the take profit level.\n\nStructure High/Low - Similar to Structure HH/LL, this approach includes considering higher highs (HH), lower lows (LL), higher lows (HL), and lower highs (LH) of the price structure.\n\nPIPS - A standardized unit for measuring price movements in the forex market.\n\nMean - Refers to mean reversion, a trading strategy based on the assumption that prices tend to revert to their average or mean value over time.",
          "type": "text"
        },
        {
          "defval": "ATR",
          "display": 15,
          "group": " ▓▓▓    👋 Exit Strategy",
          "id": "in_72",
          "isFake": true,
          "name": "Type of Stoploss",
          "options": [
            "None",
            "Fixed Percent",
            "ATR",
            "HH/LL",
            "PIPS",
            "Chande Kroll",
            "Keltner",
            "Bollinger Bands",
            "Donchian Channel",
            "MA #1",
            "MA #5",
            "Stop Loss Indicator",
            "Mean",
            "Custom"
          ],
          "tooltip": "Choose the type of stop loss for your exit strategy.\n\nNone: No stop loss.\n\nFixed Percent: Set a hard stop loss at a fixed percentage.\n\nATR: Use the Average True Range (ATR) indicator to determine the stop loss.\n\nHH/LL: Use the closest higher high (for short trades) or lower low (for long trades) to set the stop loss.\n\nPIPS: Set the stop loss in terms of a fixed number of pips.\n\nChande Kroll, Keltner, Bollinger Bands, Donchian Channel: Use the lower or upper band of the respective indicator to set the stop loss.\n\nMA #1, MA #5: Set the stop loss based on the value of Moving Average #1 or Moving Average #5.\n\nStop Loss Indicator: Use a specific stop loss indicator for setting the stop loss.\n\nMean: Set the stop loss based on the mean value of the asset.\n\nCustom: Define a custom stop loss depending on your strategy.",
          "type": "text"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    👋 Exit Strategy",
          "id": "in_73",
          "isFake": true,
          "name": "Ignore Wicks -- Read Tooltip 🛟",
          "tooltip": "Enable this option to only exit a trade if the bar's close price is below the stop loss.\n\nNote: This approach can be risky and may not work with certain API connector services.\n\nPlease note that it will work with SimpleBot, but you need to deactivate the 'Use safety SL/TP' setting for compatibility.",
          "type": "bool"
        },
        {
          "defval": 0.5,
          "display": 15,
          "group": " ▓▓▓    👋 Exit Strategy",
          "id": "in_74",
          "isFake": true,
          "name": "Ignore Wicks Protection SL % ",
          "tooltip": "Set the maximum threshold that the wick must not pass when using the 'Ignore Wicks' option.\n\nNote: The wick refers to the price movement outside the body of the candlestick.\n\nSpecify the threshold as a percentage value.",
          "type": "float"
        },
        {
          "defval": 1.6,
          "display": 15,
          "group": " ▓▓▓    🎯 Fixed Percent - Take Profit / Stoploss",
          "id": "in_75",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Stop Loss Long %",
          "step": 0.1,
          "tooltip": "Set the percentage value for the stop loss in long trades.",
          "type": "float"
        },
        {
          "defval": 2.8,
          "display": 15,
          "group": " ▓▓▓    🎯 Fixed Percent - Take Profit / Stoploss",
          "id": "in_76",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Take Profit Long %",
          "step": 0.1,
          "tooltip": "Set the percentage value for the take profit in long trades.",
          "type": "float"
        },
        {
          "defval": 1.6,
          "display": 15,
          "group": " ▓▓▓    🎯 Fixed Percent - Take Profit / Stoploss",
          "id": "in_77",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Stop Loss Short %",
          "step": 0.1,
          "tooltip": "Set the percentage value for the stop loss in short trades.",
          "type": "float"
        },
        {
          "defval": 2.8,
          "display": 15,
          "group": " ▓▓▓    🎯 Fixed Percent - Take Profit / Stoploss",
          "id": "in_78",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Take Profit Short %",
          "step": 0.1,
          "tooltip": "Set the percentage value for the take profit in short trades.",
          "type": "float"
        },
        {
          "defval": 100,
          "display": 15,
          "group": " ▓▓▓    🎯 PIPS - Take Profit / Stoploss",
          "id": "in_79",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Stop Loss Long PIPS",
          "step": 1,
          "tooltip": "Set the number of pips for the stop loss in long trades.",
          "type": "integer"
        },
        {
          "defval": 200,
          "display": 15,
          "group": " ▓▓▓    🎯 PIPS - Take Profit / Stoploss",
          "id": "in_80",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Take Profit Long PIPS",
          "step": 1,
          "tooltip": "Set the number of pips for the take profit in long trades.",
          "type": "integer"
        },
        {
          "defval": 100,
          "display": 15,
          "group": " ▓▓▓    🎯 PIPS - Take Profit / Stoploss",
          "id": "in_81",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Stop Loss Short PIPS",
          "step": 1,
          "tooltip": "Set the number of pips for the stop loss in short trades.",
          "type": "integer"
        },
        {
          "defval": 200,
          "display": 15,
          "group": " ▓▓▓    🎯 PIPS - Take Profit / Stoploss",
          "id": "in_82",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Take Profit Short PIPS",
          "step": 1,
          "tooltip": "Set the number of pips for the take profit in short trades.",
          "type": "integer"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    🎯 Custom SL Strategy",
          "id": "in_83",
          "isFake": true,
          "name": "Indicator Source - SL L🟢",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "tooltip": "Select the indicator source for the stop loss in long trades.",
          "type": "source"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    🎯 Custom SL Strategy",
          "id": "in_84",
          "isFake": true,
          "name": "Indicator Source - SL S🔴",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "tooltip": "Select the indicator source for the stop loss in short trades.",
          "type": "source"
        },
        {
          "defval": 50,
          "display": 15,
          "group": " ▓▓▓    🎯 HH/LL - Take Profit / Stoploss",
          "id": "in_85",
          "isFake": true,
          "max": 1000000000000,
          "min": 2,
          "name": "Highest High lookback",
          "tooltip": "Set the lookback period to find the highest high in the price structure.",
          "type": "integer"
        },
        {
          "defval": 60,
          "display": 15,
          "group": " ▓▓▓    🎯 HH/LL - Take Profit / Stoploss",
          "id": "in_86",
          "isFake": true,
          "max": 1000000000000,
          "min": 2,
          "name": "Lowest Low Lookback",
          "tooltip": "Set the lookback period to find the lowest low in the price structure.",
          "type": "integer"
        },
        {
          "defval": 1.3,
          "display": 15,
          "group": " ▓▓▓    🎯 R:R - Take Profit",
          "id": "in_87",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Profit factor Long (Risk to Reward)",
          "step": 0.1,
          "tooltip": "R:R (Risk to Reward) is used by default for ATR and HH/LL",
          "type": "float"
        },
        {
          "defval": 1.3,
          "display": 15,
          "group": " ▓▓▓    🎯 R:R - Take Profit",
          "id": "in_88",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Profit factor Short (Risk to Reward)",
          "step": 0.1,
          "tooltip": "R:R (Risk to Reward) is used by default for ATR and HH/LL",
          "type": "float"
        },
        {
          "defval": 9,
          "display": 15,
          "group": " ▓▓▓    🎯 Structure - Take Profit",
          "id": "in_89",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "Left Bars",
          "tooltip": "Set the number of candles to look left to find a local high or low.",
          "type": "integer"
        },
        {
          "defval": 1,
          "display": 15,
          "group": " ▓▓▓    🎯 Structure - Take Profit",
          "id": "in_90",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "Right Bars",
          "tooltip": "Set the number of candles to look right to validate a local high or low.",
          "type": "integer"
        },
        {
          "defval": 2.5,
          "display": 15,
          "group": " ▓▓▓    📊 ATR Stoploss",
          "id": "in_91",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "ATR Multiplier For Stoploss",
          "step": 0.1,
          "tooltip": "Set the multiplier to determine the ATR-based stop loss. ATR (Average True Range) is a dynamic indicator that can be used to set a stop loss.",
          "type": "float"
        },
        {
          "defval": "Source",
          "display": 15,
          "group": " ▓▓▓    📊 ATR Stoploss",
          "id": "in_92",
          "isFake": true,
          "name": "ATR Source",
          "options": [
            "Swing High/Low",
            "Source"
          ],
          "tooltip": "Choose the source for calculating the ATR. Select 'Swing High/Low' to base it on swing highs and lows, or 'Source' to use the selected source.",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    📊 ATR Stoploss",
          "id": "in_93",
          "isFake": true,
          "name": "Source Upper ATR Stoploss",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "tooltip": "Select the upper source for calculating the ATR-based stop loss.",
          "type": "source"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    📊 ATR Stoploss",
          "id": "in_94",
          "isFake": true,
          "name": "Source Lower ATR Stoploss",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "tooltip": "Select the lower source for calculating the ATR-based stop loss.",
          "type": "source"
        },
        {
          "defval": 14,
          "display": 15,
          "group": " ▓▓▓    📊 ATR Stoploss",
          "id": "in_95",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "ATR Swing lookback",
          "tooltip": "Set the lookback period for swing highs and lows when using the 'Swing High/Low' option as the ATR source.",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🔍 Trailing Exit",
          "id": "in_96",
          "isFake": true,
          "name": "Use Trailing Stop",
          "tooltip": "Enable this option to activate a trailing stop loss. The stop loss will dynamically adjust as the trade progresses.",
          "type": "bool"
        },
        {
          "defval": "Close",
          "display": 15,
          "group": " ▓▓▓    🔍 Trailing Exit",
          "id": "in_97",
          "isFake": true,
          "name": "Trailing Stop Source",
          "options": [
            "High/Low",
            "Close",
            "Open",
            "Chande Kroll",
            "Keltner",
            "Bollinger Bands",
            "Donchian Channel"
          ],
          "tooltip": "Select the source for calculating the trailing stop. Choose from options like 'High/Low', 'Close', 'Open', and specific indicators like 'Chande Kroll', 'Keltner', 'Bollinger Bands', or 'Donchian Channel'.",
          "type": "text"
        },
        {
          "defval": "Instant",
          "display": 15,
          "group": " ▓▓▓    🔍 Trailing Exit",
          "id": "in_98",
          "isFake": true,
          "name": "When to Activate Trailing?",
          "options": [
            "Instant",
            "After Hit Threshold %",
            "After Hit TP 1",
            "After Hit TP 2"
          ],
          "tooltip": "Choose when to activate the trailing stop. Options include 'Instant', 'After Hit Threshold %', 'After Hit TP 1', and 'After Hit TP 2'.",
          "type": "text"
        },
        {
          "defval": 15,
          "display": 15,
          "group": " ▓▓▓    🔍 Trailing Exit",
          "id": "in_99",
          "isFake": true,
          "name": "Trigger Trailing Threshold % of Total TP",
          "tooltip": "Set the threshold percentage of the total take profit to trigger the trailing stop. When the specified percentage is reached, the trailing stop will be activated.",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🔍 Trailing Exit",
          "id": "in_100",
          "isFake": true,
          "name": "Use Trailing Take Profit",
          "tooltip": "Enable this option to use trailing take profit. As the final take profit is hit, the trailing stop loss will continue to follow until it reverses.",
          "type": "bool"
        },
        {
          "defval": 3,
          "display": 15,
          "group": " ▓▓▓    🔍 Trailing Exit",
          "id": "in_101",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "ATR Trailing Stop Multiplier",
          "step": 0.1,
          "tooltip": "Set the multiplier for determining the size of the ATR-based trailing stop.",
          "type": "float"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🎯 Accuracy",
          "id": "in_102",
          "inline": "decpoints",
          "isFake": true,
          "name": "Round to the symbol's ",
          "type": "bool"
        },
        {
          "defval": 3,
          "display": 15,
          "group": " ▓▓▓    🎯 Accuracy",
          "id": "in_103",
          "inline": "decpoints",
          "isFake": true,
          "name": "decimals points",
          "tooltip": "Manually round to max decimal points. This will help with more accuracy between you and your exchange.",
          "type": "integer"
        },
        {
          "defval": 1,
          "display": 15,
          "group": " ▓▓▓    🚧 Risk Management",
          "id": "in_104",
          "isFake": true,
          "name": "Wait X Candles Between Entries",
          "tooltip": "Always wait X candles between entries. Set to below 0 to ignore.",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🚧 Risk Management",
          "id": "in_105",
          "isFake": true,
          "name": "Set Max Candles in Trade",
          "tooltip": "Enable the max number of candles in a trade",
          "type": "bool"
        },
        {
          "defval": 20,
          "display": 15,
          "group": " ▓▓▓    🚧 Risk Management",
          "id": "in_106",
          "isFake": true,
          "name": "Max Candles",
          "tooltip": "Set the max number of candles in a trade. Please allow for one candle close after to close the trade.",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🚧 Risk Management",
          "id": "in_107",
          "isFake": true,
          "name": "Set Max Total DrawDown",
          "tooltip": "Enables max drawdown protection. Enabling this will stop the bot if the overall strategy drawdown drops below the defined risk appetite",
          "type": "bool"
        },
        {
          "defval": 20,
          "display": 15,
          "group": " ▓▓▓    🚧 Risk Management",
          "id": "in_108",
          "isFake": true,
          "name": "Max Drawdown (%)",
          "tooltip": "Risk appetite. Every strategy sees downside. This is how much you could stomach to allow the bot to lose if you let it run. Strategy stops taking trades below this level",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🚧 Risk Management",
          "id": "in_109",
          "isFake": true,
          "name": "Set Max Intraday Loss",
          "tooltip": "Enable this option to set a maximum intraday loss limit for risk management.",
          "type": "bool"
        },
        {
          "defval": 20,
          "display": 15,
          "group": " ▓▓▓    🚧 Risk Management",
          "id": "in_110",
          "isFake": true,
          "name": "Max Intraday Loss (%)",
          "tooltip": "Set the maximum percentage of intraday loss allowed. If the loss exceeds this limit, further trading for the day will be stopped.",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🚧 Risk Management",
          "id": "in_111",
          "isFake": true,
          "name": "Set Max Consecutive Days with Losses",
          "tooltip": "Enable this option to set a maximum number of consecutive days with losses. If the maximum limit is reached, trading will be paused until the consecutive loss streak is broken.",
          "type": "bool"
        },
        {
          "defval": 20,
          "display": 15,
          "group": " ▓▓▓    🚧 Risk Management",
          "id": "in_112",
          "isFake": true,
          "name": "Max Consecutive Days with Losses",
          "tooltip": "The purpose of this rule is to cancel all pending orders, close all open positions and stop placing orders after a specified number of consecutive days with losses. The rule affects the whole strategy.",
          "type": "integer"
        },
        {
          "defval": "Percent",
          "display": 15,
          "group": " ▓▓▓    📈 Leverage & Position Size",
          "id": "in_113",
          "isFake": true,
          "name": "Percent or Fixed",
          "options": [
            "Percent",
            "Percent of initial account (Fixed Amount)",
            "Risk Based"
          ],
          "tooltip": "Choose the position sizing method: \n- 'Percent': Use a fixed percentage of your portfolio for each trade. \n- 'Percent of initial account (Fixed Amount)': Use a fixed amount from your initial account balance for each trade, e.g., Initial portfolio: $1000 / 10% = $100 per trade. \n- 'Risk Based': Adjust position size based on risk management parameters.",
          "type": "text"
        },
        {
          "defval": 20,
          "display": 15,
          "group": " ▓▓▓    📈 Leverage & Position Size",
          "id": "in_114",
          "isFake": true,
          "max": 100,
          "min": 1,
          "name": "% of Portfolio",
          "step": 0.5,
          "tooltip": "Set the percentage of your portfolio to risk per trade. This determines the position size based on your portfolio value. NOTE: The is the base for all other calculations.",
          "type": "float"
        },
        {
          "defval": 1,
          "display": 15,
          "group": " ▓▓▓    📈 Leverage & Position Size",
          "id": "in_115",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Leverage",
          "tooltip": "Set the leverage ratio to be applied to your position size. Adjusting leverage can amplify potential returns and risks in your trading strategy.",
          "type": "integer"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🎢  Leverage Risk Management",
          "id": "in_116",
          "isFake": true,
          "name": "Dynamic Leverage (READ TOOLTIP)",
          "tooltip": "This will dynamically set your leverage to the risk ajusted to the highest possible amount. EXTREME RISKY! \n Wiggle room subtracts this number from the leverage to ensure you are never above the max amount.\n MAX : MAX leverage to use. \n Wiggle : Wiggle room to not get liquidated \n RISK : % of the % to Risk. \n Calculation : RISK/SL*MAINTENANCE_MARGIN_RATE",
          "type": "bool"
        },
        {
          "defval": 25,
          "display": 15,
          "group": " ▓▓▓    🎢  Leverage Risk Management",
          "id": "in_117",
          "inline": "dynolev",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "MAX",
          "type": "integer"
        },
        {
          "defval": 25,
          "display": 15,
          "group": " ▓▓▓    🎢  Leverage Risk Management",
          "id": "in_118",
          "inline": "dynolev",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "Wiggle",
          "type": "integer"
        },
        {
          "defval": 100,
          "display": 15,
          "group": " ▓▓▓    🎢  Leverage Risk Management",
          "id": "in_119",
          "inline": "dynolev",
          "isFake": true,
          "max": 100,
          "min": -1000000000000,
          "name": "Risk",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🎢  Leverage Risk Management",
          "id": "in_120",
          "isFake": true,
          "name": "Show Liquadation line (BETA)",
          "tooltip": "This will just add a reference line to the graph and will not be detect by backtesting.\n This is for reference only as it will depend on the PAIR and the calculation used by your exchange.",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🎢  Leverage Risk Management",
          "id": "in_121",
          "isFake": true,
          "name": "Block Trades if Liquadation is before SL (BETA)",
          "tooltip": "This will block any trades where the RISK_LEVERAGE line is below/above the Stop loss, \n Note this can only be estimated as the trade has not taken place.",
          "type": "bool"
        },
        {
          "defval": 0.5,
          "display": 15,
          "group": " ▓▓▓    🎢  Leverage Risk Management",
          "id": "in_122",
          "isFake": true,
          "name": "Maintenance Margin Rate",
          "tooltip": "I suggest finding out your Maintenance Margin Rate before using any algo that could be effected by the leverage calculation.",
          "type": "float"
        },
        {
          "defval": "Dynamic Algo",
          "display": 15,
          "group": " ▓▓▓    📊 Position Size - Risk Management",
          "id": "in_123",
          "isFake": true,
          "name": "Position Size (BETA)",
          "options": [
            "Manual",
            "Kelly Ratio",
            "Dynamic Algo",
            "Dynamic Algo 2",
            "Risk Based"
          ],
          "tooltip": "In alerts you can use #margin#, this will be replaced by tradingview. I did a full youtube video about this called 'Double your profits' For more information : https://youtu.be/4PB227Y_3CY",
          "type": "text"
        },
        {
          "defval": "ATR",
          "display": 15,
          "group": " ▓▓▓    📊 Position Size - Risk Management",
          "id": "in_124",
          "isFake": true,
          "name": "DA Source",
          "options": [
            "close",
            "volume",
            "MA 5",
            "MA 25",
            "MACD",
            "volume MA",
            "ATR",
            "ADX"
          ],
          "tooltip": "Select the source for the dynamic position size algorithm.",
          "type": "text"
        },
        {
          "defval": 0.5,
          "display": 15,
          "group": " ▓▓▓    📊 Position Size - Risk Management",
          "id": "in_125",
          "inline": "daqty",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "DA Multi 1",
          "step": 0.1,
          "type": "float"
        },
        {
          "defval": 1,
          "display": 15,
          "group": " ▓▓▓    📊 Position Size - Risk Management",
          "id": "in_126",
          "inline": "daqty",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "DA 2",
          "step": 0.1,
          "type": "float"
        },
        {
          "defval": 1.5,
          "display": 15,
          "group": " ▓▓▓    📊 Position Size - Risk Management",
          "id": "in_127",
          "inline": "daqty",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "DA 3",
          "step": 0.1,
          "tooltip": " This uses an exclusive algo from daviddtech to dynamically set your position amount. \n For more information : https://youtu.be/4PB227Y_3CY",
          "type": "float"
        },
        {
          "defval": "https://youtu.be/4PB227Y_3CY",
          "display": 15,
          "group": " ▓▓▓    📊 Position Size - Risk Management",
          "id": "in_128",
          "isFake": true,
          "name": " ℹ️ More information",
          "type": "text"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📊 Position Size - Martingale",
          "id": "in_129",
          "isFake": true,
          "name": "Use Martingale?",
          "tooltip": "Enable this option to use Martingale or Anti-Martingale position sizing. Martingale is a position sizing strategy where the position size is doubled on every loss. Anti-Martingale is a strategy where the position size is doubled on every win. BE AWARE! This will also activate the position size in daviddtech bot.",
          "type": "bool"
        },
        {
          "defval": "NORMAL",
          "display": 15,
          "group": " ▓▓▓    📊 Position Size - Martingale",
          "id": "in_130",
          "isFake": true,
          "name": "Martingale Type",
          "options": [
            "NORMAL",
            "ANTI",
            "LEVERAGE"
          ],
          "type": "text"
        },
        {
          "defval": 2,
          "display": 15,
          "group": " ▓▓▓    📊 Position Size - Martingale",
          "id": "in_131",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Martingale Multipler",
          "step": 0.1,
          "tooltip": "The Martingale Multipler parameter determines the multiplier used in the Martingale position sizing strategy.\n\nIn the context of this strategy, Martingale is a position sizing technique where the position size is doubled on every loss. The Martingale Multipler value represents the factor by which the position size is increased after each losing trade.\n\nFor example, if Martingale Multipler is set to 2, the position size will be doubled after each loss.\n\nIt is important to exercise caution when using Martingale, as it can lead to significant drawdowns and increased risk. Consider implementing proper risk management techniques and assessing the overall risk-reward profile of your trading strategy.",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🔄 DCA Orders / Safety Orders",
          "id": "in_132",
          "isFake": true,
          "name": "Use DCA.",
          "tooltip": "Enable this option to use Dollar Cost Averaging (DCA) orders. DCA is a strategy where additional orders are placed at predetermined price levels to average the entry price of a position.",
          "type": "bool"
        },
        {
          "defval": 6,
          "display": 15,
          "group": " ▓▓▓    🔄 DCA Orders / Safety Orders",
          "id": "in_133",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Max no. of safe orders",
          "tooltip": "This is the total number of Safety Orders the bot is allowed to use per deal that is opened. ",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🔄 DCA Orders / Safety Orders",
          "id": "in_134",
          "isFake": true,
          "name": "Divide position by Max no. of safe orders",
          "tooltip": "Enable this option to divide the position size by the maximum number of safety orders. Each DCA order will have a fraction of the original position size.",
          "type": "bool"
        },
        {
          "defval": 1.1,
          "display": 15,
          "group": " ▓▓▓    🔄 DCA Orders / Safety Orders",
          "id": "in_135",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Safety order step scale 🛟",
          "step": 0.1,
          "tooltip": "The Safety Order Step Scale is used to multiply the Price Deviation percentage used by the last Safety Order placed on the exchange account.\n\nUsing a larger value here will reduce the amount of Safety Orders your bot will require to cover a larger move in price in the opposite direction to the active deal's take profit target.",
          "type": "float"
        },
        {
          "defval": 1.1,
          "display": 15,
          "group": " ▓▓▓    🔄 DCA Orders / Safety Orders",
          "id": "in_136",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Safety order volume scale 🛟",
          "step": 0.1,
          "tooltip": "The Safety Order Volume Scale is used to multiply the amount of funds used by the last Safety Order that was created.",
          "type": "float"
        },
        {
          "defval": 1,
          "display": 15,
          "group": " ▓▓▓    🔄 DCA Orders / Safety Orders",
          "id": "in_137",
          "isFake": true,
          "max": 1000000000000,
          "min": 0,
          "name": "Price deviation to open safety orders (%)",
          "step": 0.1,
          "tooltip": "Enter the percentage difference in price to create the first Safety Order. All Safety Orders are calculated from the price the initial Base Order.",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    ⚖️ Risk to Reward Protection",
          "id": "in_138",
          "isFake": true,
          "name": "Activate Threshold Risk:Reward?",
          "tooltip": "Activate this option to enforce a minimum risk-to-reward ratio for your trades.",
          "type": "bool"
        },
        {
          "defval": 1,
          "display": 15,
          "group": " ▓▓▓    ⚖️ Risk to Reward Protection",
          "id": "in_139",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Threshold Risk:Reward",
          "step": 0.1,
          "tooltip": "Set the minimum risk-to-reward ratio threshold. Trades with a risk-to-reward ratio below this threshold will be affected according to your risk management rules.",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    ⚖️ Risk to Reward Protection",
          "id": "in_140",
          "isFake": true,
          "name": "Activate Minimum TP %?",
          "tooltip": "Activate this option to set a minimum take profit as a percentage. If activated, the take profit level must reach the specified percentage, or the TP level will be replaced or the trade ignored. This helps filter out small non-profitable trades when using techniques like FIB pulls to set TP levels.",
          "type": "bool"
        },
        {
          "defval": "Use Percentage Instead",
          "display": 15,
          "group": " ▓▓▓    ⚖️ Risk to Reward Protection",
          "id": "in_141",
          "isFake": true,
          "name": "What if TP is too small ?",
          "options": [
            "Do not enter",
            "Use Percentage Instead"
          ],
          "tooltip": "Select the behavior when the TP is too small. 'Do not enter' will prevent the trade from being taken, while 'Use Percentage Instead' will replace the tp with the specified percentage.",
          "type": "text"
        },
        {
          "defval": 1,
          "display": 15,
          "group": " ▓▓▓    ⚖️ Risk to Reward Protection",
          "id": "in_142",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Min Threshold TP %",
          "step": 0.1,
          "tooltip": "Set the minimum threshold for the take profit percentage. Trades with a take profit below this threshold will be affected according to your risk management rules.",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    ⚖️ Risk to Reward Protection",
          "id": "in_143",
          "isFake": true,
          "name": "Activate Max SL %",
          "tooltip": "Activate this option to set a maximum stop loss as a percentage.",
          "type": "bool"
        },
        {
          "defval": "Use Percentage Instead",
          "display": 15,
          "group": " ▓▓▓    ⚖️ Risk to Reward Protection",
          "id": "in_144",
          "isFake": true,
          "name": "What if threshold SL breaks ?",
          "options": [
            "Do not enter",
            "Use Percentage Instead"
          ],
          "tooltip": "Select the behavior when the stop loss threshold is broken. 'Do not enter' will prevent the trade from being taken, while 'Use Percentage Instead' will replace the stop loss with the specified percentage.",
          "type": "text"
        },
        {
          "defval": 2.5,
          "display": 15,
          "group": " ▓▓▓    ⚖️ Risk to Reward Protection",
          "id": "in_145",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Threshold Max % SL",
          "step": 0.1,
          "tooltip": "Set the maximum stop loss percentage. If the dynamically calculated stop loss exceeds this percentage, it will either prevent the trade from being taken (based on the selection in 'What if threshold SL breaks ?') or replace the stop loss with this percentage.",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🦜 Early Exit Protection",
          "id": "in_146",
          "isFake": true,
          "name": "Close Position Early if Price Crosses MA?",
          "type": "bool"
        },
        {
          "defval": "EMA",
          "display": 15,
          "group": " ▓▓▓    🦜 Early Exit Protection",
          "id": "in_147",
          "inline": "maProtect",
          "isFake": true,
          "name": "MA Protection Type",
          "options": [
            "EMA",
            "HEMA",
            "SMA",
            "HMA",
            "WMA",
            "DEMA",
            "VWMA",
            "VWAP",
            "T3",
            "Indicator Source"
          ],
          "tooltip": "Enable this option to close the position early if the price crosses a moving average (MA). \n\nSelect the type of moving average (MA) to use for the early exit protection or use Indicator Source to use and external indicator below.",
          "type": "text"
        },
        {
          "defval": 50,
          "display": 15,
          "group": " ▓▓▓    🦜 Early Exit Protection",
          "id": "in_148",
          "inline": "maProtect",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "MA Protection Length",
          "tooltip": "Set the length of the moving average (MA) for the early exit protection.",
          "type": "integer"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    🦜 Early Exit Protection",
          "id": "in_149",
          "isFake": true,
          "name": "Indicator Source - Protection",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "tooltip": "Select the indicator source for the protection. Please be careful not to add indicators that can repaint.",
          "type": "source"
        },
        {
          "defval": "OFF",
          "display": 15,
          "group": " ▓▓▓    🔀 Move to Breakeven",
          "id": "in_150",
          "isFake": true,
          "name": "Move to Breakeven",
          "options": [
            "MULTI TP",
            "MULTI TP - Second TP",
            "SINGLE TP",
            "SINGLE TP % OF TRADE",
            "OFF"
          ],
          "tooltip": "Choose the move to breakeven parameter allows you to choose the logic for moving a trade to breakeven.\n\n- Multi TP: Selecting this option will move the trade to breakeven when the first take profit target is hit.\n\n- MULTI TP - Second TP: This option moves the trade to breakeven when the second take profit target is reached.\n\n- SINGLE TP: With this option, the trade will be moved to breakeven when a certain percentage level is reached from the entry line. For example, setting it to 1% would trigger the move to breakeven when the entry moves 1% into profit.\n\n- SINGLE TP % OF TRADE: Choose this option to move the trade to breakeven when a certain percentage level of the full position is reached. For example, if set to 30%, the trade will be moved to breakeven when it reaches 30% of the full trade size",
          "type": "text"
        },
        {
          "defval": 1.5,
          "display": 15,
          "group": " ▓▓▓    🔀 Single TP Move to Breakeven",
          "id": "in_151",
          "isFake": true,
          "name": "Trigger B.E %",
          "tooltip": "\n\nThe MOVE_BREAKEVEN_TRIGGER parameter represents the percentage level at which the trade should be moved to breakeven when using the SINGLE TP or SINGLE TP % OF TRADE logic. For example, if MOVE_BREAKEVEN_TRIGGER is set to 1.5, the trade will be moved to breakeven when it reaches a 1.5% profit from the entry line.",
          "type": "float"
        },
        {
          "defval": 0,
          "display": 15,
          "group": " ▓▓▓    🔀 Single TP Move to Breakeven",
          "id": "in_152",
          "isFake": true,
          "name": "Wiggle room to cover commision - B.E %",
          "tooltip": "The MOVE_BREAKEVEN_WIGGLE parameter allows for a wiggle room to cover commissions when moving the trade to breakeven using the SINGLE TP or SINGLE TP % OF TRADE logic. It represents the percentage level of the trade size that will be added to the breakeven price to account for commissions. For example, if MOVE_BREAKEVEN_WIGGLE is set to 0.0, no additional wiggle room will be added.",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🎯📈 Multiple Take Profit Levels",
          "id": "in_153",
          "isFake": true,
          "name": "Take Multi Profit X3",
          "tooltip": "This may only work on percentage. Depending on your API connector. WORKS WITH SIMPLEBOT",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🎯📈 Multiple Take Profit Levels",
          "id": "in_154",
          "inline": "tp1",
          "isFake": true,
          "name": "TP1",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🎯📈 Multiple Take Profit Levels",
          "id": "in_155",
          "inline": "tp2",
          "isFake": true,
          "name": "TP2",
          "type": "bool"
        },
        {
          "defval": 33,
          "display": 15,
          "group": " ▓▓▓    🎯📈 Multiple Take Profit Levels",
          "id": "in_156",
          "inline": "tp1",
          "isFake": true,
          "name": "% First TP",
          "type": "integer"
        },
        {
          "defval": 33,
          "display": 15,
          "group": " ▓▓▓    🎯📈 Multiple Take Profit Levels",
          "id": "in_157",
          "inline": "tp2",
          "isFake": true,
          "name": "% Second TP",
          "type": "integer"
        },
        {
          "defval": 100,
          "display": 15,
          "group": " ▓▓▓    🎯📈 Multiple Take Profit Levels",
          "id": "in_158",
          "inline": "tp3",
          "isFake": true,
          "name": "% Third TP",
          "type": "integer"
        },
        {
          "defval": 33,
          "display": 15,
          "group": " ▓▓▓    🎯📈 Multiple Take Profit Levels",
          "id": "in_159",
          "inline": "tp1",
          "isFake": true,
          "max": 100,
          "min": -1000000000000,
          "name": "Level 1",
          "tooltip": "% to take at X TP = Percentage of portfolio to remove from trade, Level X = at what percentage to take that profit? BE AWARE this can fake or make your strategy look better than it truly is in tradingview.",
          "type": "integer"
        },
        {
          "defval": 66,
          "display": 15,
          "group": " ▓▓▓    🎯📈 Multiple Take Profit Levels",
          "id": "in_160",
          "inline": "tp2",
          "isFake": true,
          "max": 100,
          "min": -1000000000000,
          "name": "Level 2",
          "tooltip": "% to take at X TP = Percentage of portfolio to remove from trade, Level X = at what percentage to take that profit? BE AWARE this can fake or make your strategy look better than it truly is in tradingview.",
          "type": "integer"
        },
        {
          "defval": 100,
          "display": 15,
          "group": " ▓▓▓    🎯📈 Multiple Take Profit Levels",
          "id": "in_161",
          "inline": "tp3",
          "isFake": true,
          "max": 100,
          "min": -1000000000000,
          "name": "Level 3",
          "tooltip": "% to take at X TP = Percentage of portfolio to remove from trade, Level X = at what percentage to take that profit? BE AWARE this can fake or make your strategy look better than it truly is in tradingview.",
          "type": "integer"
        },
        {
          "defval": 14,
          "display": 15,
          "group": " ▓▓▓    🌐 ATR Global Settings",
          "id": "in_162",
          "isFake": true,
          "name": "ATR length",
          "tooltip": "Length of the period for the ATR to average",
          "type": "integer"
        },
        {
          "defval": "Off",
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_163",
          "isFake": true,
          "name": "Use Moving Averages?",
          "options": [
            "Off",
            "Close over/under MA5",
            "Strict Close over/under MA5",
            "5 MA (Ordered)",
            "3 MA (Ordered)",
            "3 MA (Strict)",
            "3 MA (Cross)"
          ],
          "tooltip": "Sets the moving average type for the first MA",
          "type": "text"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_164",
          "isFake": true,
          "name": "Inverse Moving Averages?",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_165",
          "inline": "1",
          "isFake": true,
          "name": "MA #1",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_166",
          "inline": "2",
          "isFake": true,
          "name": "MA #2",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_167",
          "inline": "3",
          "isFake": true,
          "name": "MA #3",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_168",
          "inline": "4",
          "isFake": true,
          "name": "MA #4",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_169",
          "inline": "5",
          "isFake": true,
          "name": "MA #5",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_170",
          "inline": "6",
          "isFake": true,
          "name": "HMA BAR",
          "type": "bool"
        },
        {
          "defval": "EMA",
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_171",
          "inline": "1",
          "isFake": true,
          "name": "MA Type #1",
          "options": [
            "EMA",
            "HEMA",
            "SMA",
            "HMA",
            "WMA",
            "DEMA",
            "VWMA",
            "VWAP",
            "T3"
          ],
          "tooltip": "Sets the moving average type for the first MA",
          "type": "text"
        },
        {
          "defval": "EMA",
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_172",
          "inline": "2",
          "isFake": true,
          "name": "MA Type #2",
          "options": [
            "EMA",
            "HEMA",
            "SMA",
            "HMA",
            "WMA",
            "DEMA",
            "VWMA",
            "VWAP",
            "T3"
          ],
          "tooltip": "Sets the moving average type for the second MA",
          "type": "text"
        },
        {
          "defval": "EMA",
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_173",
          "inline": "3",
          "isFake": true,
          "name": "MA Type #3",
          "options": [
            "EMA",
            "HEMA",
            "SMA",
            "HMA",
            "WMA",
            "DEMA",
            "VWMA",
            "VWAP",
            "T3"
          ],
          "tooltip": "Sets the moving average type for the first MA",
          "type": "text"
        },
        {
          "defval": "EMA",
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_174",
          "inline": "4",
          "isFake": true,
          "name": "MA Type #4",
          "options": [
            "EMA",
            "HEMA",
            "SMA",
            "HMA",
            "WMA",
            "DEMA",
            "VWMA",
            "VWAP",
            "T3"
          ],
          "tooltip": "Sets the moving average type for the second MA",
          "type": "text"
        },
        {
          "defval": "T3",
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_175",
          "inline": "5",
          "isFake": true,
          "name": "MA Type #5",
          "options": [
            "EMA",
            "HEMA",
            "SMA",
            "HMA",
            "WMA",
            "DEMA",
            "VWMA",
            "VWAP",
            "T3"
          ],
          "tooltip": "Sets the moving average type for the first MA",
          "type": "text"
        },
        {
          "defval": 9,
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_176",
          "inline": "1",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "MA Length #1",
          "tooltip": "Sets the length for the first MA. (it is likely best to keep MA1 length less than MA2, or it may result in opposite trade bias desired depending on MA type",
          "type": "integer"
        },
        {
          "defval": 21,
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_177",
          "inline": "2",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "MA Length #2",
          "tooltip": "Sets the length for the second MA. (it is likely best to keep MA2 length greater than MA2, or it may result in opposite trade bias desired depending on MA type",
          "type": "integer"
        },
        {
          "defval": 55,
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_178",
          "inline": "3",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "MA Length #3",
          "tooltip": "Sets the length for the first MA. (it is likely best to keep MA1 length less than MA2, or it may result in opposite trade bias desired depending on MA type",
          "type": "integer"
        },
        {
          "defval": 100,
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_179",
          "inline": "4",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "MA Length #4",
          "tooltip": "Sets the length for the first MA. (it is likely best to keep MA1 length less than MA2, or it may result in opposite trade bias desired depending on MA type",
          "type": "integer"
        },
        {
          "defval": 300,
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_180",
          "inline": "5",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "MA Length #5",
          "tooltip": "Sets the length for the first MA. (it is likely best to keep MA1 length less than MA2, or it may result in opposite trade bias desired depending on MA type",
          "type": "integer"
        },
        {
          "defval": 100,
          "display": 15,
          "group": " ▓▓▓    📈📈 MA Strategy Settings ",
          "id": "in_181",
          "inline": "6",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "HMA Length",
          "tooltip": "Sets the length for the first MA. (it is likely best to keep MA1 length less than MA2, or it may result in opposite trade bias desired depending on MA type",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🚦 Max Trades In One Direction",
          "id": "in_182",
          "isFake": true,
          "name": "Enable Max Trades?",
          "tooltip": "Enable this option to set a maximum number of trades in one direction.",
          "type": "bool"
        },
        {
          "defval": 5,
          "display": 15,
          "group": " ▓▓▓    🚦 Max Trades In One Direction",
          "id": "in_183",
          "isFake": true,
          "name": "Max Trades Per Direction?",
          "tooltip": "Set the maximum number of trades allowed in one direction. For example, if MAX = 5, only 5 long trades in a row will be allowed. The trading bot will then be paused until a short trade occurs.",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📅 Pause bot for events",
          "id": "in_184",
          "inline": "FOMC",
          "isFake": true,
          "name": "FOMC",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📅 Pause bot for events",
          "id": "in_185",
          "inline": "FOMC",
          "isFake": true,
          "name": "FOMCM",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📅 Pause bot for events",
          "id": "in_186",
          "inline": "FOMC",
          "isFake": true,
          "name": "PPI",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📅 Pause bot for events",
          "id": "in_187",
          "inline": "FOMC",
          "isFake": true,
          "name": "CPI",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📅 Pause bot for events",
          "id": "in_188",
          "inline": "FOMC",
          "isFake": true,
          "name": "CSI",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📅 Pause bot for events",
          "id": "in_189",
          "inline": "FOMC",
          "isFake": true,
          "name": "CCI",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📅 Pause bot for events",
          "id": "in_190",
          "inline": "FOMC",
          "isFake": true,
          "name": "NFP",
          "tooltip": "Data from 9 Nov 2021  to 3 Jan 2024.  The FOMC meets eight times a year to determine monetary policy. Decisions are announced in a press release at 2:15 p.m. ET, followed by a press conference at 2:30 p.m. ET. They consider economic and financial developments to assess their impact on the economic outlook.\n\nFOMC minutes are released three weeks after each meeting, providing a detailed account of discussions and assessments of economic developments.\nThe Producer Price Index (PPI) measures price changes of goods and services by domestic producers. It's a weighted average of prices in various sectors, serving as a leading indicator for CPI.\n\nThe Consumer Price Index (CPI) measures price changes of goods and services purchased by households. CPI-U, based on a sample of 87,000 urban households, is widely used to gauge inflation.\n\nThe University of Michigan's Consumer Sentiment Index (CSI) surveys 500 U.S. households monthly to gauge consumer attitudes about the economy, serving as a leading indicator for consumer spending.\n\nThe Conference Board's Consumer Confidence Index (CCI) surveys 5,000 U.S. households monthly to measure consumer attitudes about the economy, also serving as a leading indicator for consumer spending.\n\nThe Non-Farm Payroll (NFP) measures changes in employment, excluding farm and government workers. It's a leading indicator for consumer spending.",
          "type": "bool"
        },
        {
          "defval": 10,
          "display": 15,
          "group": " ▓▓▓    📅 Pause bot for events",
          "id": "in_191",
          "isFake": true,
          "name": "Close X MINUTES before event",
          "tooltip": "This is the number of MINUTES the bot will be paused for before the event, allow one candle for the close.",
          "type": "integer"
        },
        {
          "defval": 60,
          "display": 15,
          "group": " ▓▓▓    📅 Pause bot for events",
          "id": "in_192",
          "isFake": true,
          "name": "Pause for X MINUTES after event",
          "tooltip": "This is the number of MINUTES the bot will be paused for after the event.",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Range Filter - Extra Filters 🏆",
          "id": "in_193",
          "isFake": true,
          "name": "Use The Range Filter?",
          "type": "bool"
        },
        {
          "defval": 100,
          "display": 15,
          "group": " ▓▓▓     Range Filter - Extra Filters 🏆",
          "id": "in_194",
          "inline": "RF1",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "RF Period",
          "type": "integer"
        },
        {
          "defval": 3,
          "display": 15,
          "group": " ▓▓▓     Range Filter - Extra Filters 🏆",
          "id": "in_195",
          "inline": "RF1",
          "isFake": true,
          "max": 1000000000000,
          "min": 0.1,
          "name": "RF Multi",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📊 RSI Settings - Extra Filters 🏆",
          "id": "in_196",
          "isFake": true,
          "name": "Enable RSI (Big Extender) ?",
          "type": "bool"
        },
        {
          "defval": "Standard",
          "display": 15,
          "group": " ▓▓▓    📊 RSI Settings - Extra Filters 🏆",
          "id": "in_197",
          "isFake": true,
          "name": "RSI Strategy",
          "options": [
            "Standard",
            "Standard + MA strict",
            "Standard + MA"
          ],
          "tooltip": "Standard RSI : When RSI is more than Overbrought SHORT. When RSI is less than Oversold LONG.\n Standard + MA : If RSI is more than MA LONG If RSI is less than MA SHORT. \n Standard + MA Strict : RSI MA cross must happen in the Oversold or Overbrought areas. \n Please try the reversed version as sometimes results can be suprising.",
          "type": "text"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓    📊 RSI Settings - Extra Filters 🏆",
          "id": "in_198",
          "isFake": true,
          "name": "RSI Source",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": 14,
          "display": 15,
          "group": " ▓▓▓    📊 RSI Settings - Extra Filters 🏆",
          "id": "in_199",
          "isFake": true,
          "name": "RSI Length",
          "type": "integer"
        },
        {
          "defval": 75,
          "display": 15,
          "group": " ▓▓▓    📊 RSI Settings - Extra Filters 🏆",
          "id": "in_200",
          "isFake": true,
          "name": "RSI Overbrought",
          "type": "integer"
        },
        {
          "defval": 25,
          "display": 15,
          "group": " ▓▓▓    📊 RSI Settings - Extra Filters 🏆",
          "id": "in_201",
          "isFake": true,
          "name": "RSI Oversold",
          "type": "integer"
        },
        {
          "defval": "MA",
          "display": 15,
          "group": " ▓▓▓    📊 RSI Settings - Extra Filters 🏆",
          "id": "in_202",
          "isFake": true,
          "name": "RSI MA",
          "options": [
            "MA",
            "EMA",
            "SMA",
            "HMA",
            "WMA",
            "DEMA",
            "VWMA",
            "T3"
          ],
          "type": "text"
        },
        {
          "defval": 14,
          "display": 15,
          "group": " ▓▓▓    📊 RSI Settings - Extra Filters 🏆",
          "id": "in_203",
          "isFake": true,
          "name": "MA Length - RSI",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    📊 RSI Settings - Extra Filters 🏆",
          "id": "in_204",
          "isFake": true,
          "name": "RSI Reverse",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓         Hurst Settings - Extra Filters 🏆",
          "id": "in_205",
          "isFake": true,
          "name": "Enable  Hurst exponent ?",
          "tooltip": "The Hurst exponent is a mathematical concept used to assess the predictability of a time series data. It is particularly employed in financial analysis to identify whether a market is trending, experiencing consolidation, or following a random walk pattern.\n\nThe Hurst exponent measures the long-term memory or persistence of a time series. It ranges from 0 to 1, where values above 0.5 indicate a trending market, values below 0.5 suggest a mean-reverting or consolidating market, and a value of 0.5 implies a random walk pattern.",
          "type": "bool"
        },
        {
          "defval": 64,
          "display": 15,
          "group": " ▓▓▓         Hurst Settings - Extra Filters 🏆",
          "id": "in_206",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Hurst Exp Length",
          "type": "integer"
        },
        {
          "defval": "Trending Market",
          "display": 15,
          "group": " ▓▓▓         Hurst Settings - Extra Filters 🏆",
          "id": "in_207",
          "isFake": true,
          "name": "Hurst Type",
          "options": [
            "Trending Market",
            "Consolidation",
            "Random Walk"
          ],
          "type": "text"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_208",
          "isFake": true,
          "name": "Enable ADX ?",
          "type": "bool"
        },
        {
          "defval": "Normal",
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_209",
          "isFake": true,
          "name": "ADX Type",
          "options": [
            "Normal",
            "Stoch",
            "MasaNakamura"
          ],
          "type": "text"
        },
        {
          "defval": "Static",
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_210",
          "isFake": true,
          "name": "ADX Line Type",
          "options": [
            "Static",
            "MA",
            "EMA",
            "SMA",
            "HMA",
            "WMA",
            "DEMA",
            "VWMA",
            "T3"
          ],
          "type": "text"
        },
        {
          "defval": 14,
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_211",
          "isFake": true,
          "name": "ADX Smoothing",
          "type": "integer"
        },
        {
          "defval": 30,
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_212",
          "isFake": true,
          "max": 1000000000000,
          "min": 0,
          "name": "ADX Above line",
          "type": "integer"
        },
        {
          "defval": 200,
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_213",
          "isFake": true,
          "max": 1000000000000,
          "min": 0,
          "name": "ADX MA Length",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_214",
          "isFake": true,
          "name": "Use DI for Direction ?",
          "type": "bool"
        },
        {
          "defval": 14,
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_215",
          "isFake": true,
          "name": "DI Length",
          "type": "integer"
        },
        {
          "defval": 19,
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_216",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Min stoch length",
          "type": "integer"
        },
        {
          "defval": 100,
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_217",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Max stoch length Smoothing",
          "type": "integer"
        },
        {
          "defval": 2,
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_218",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Stoch Smoothing",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_219",
          "isFake": true,
          "name": "Inverse adaptive",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_220",
          "isFake": true,
          "name": "Use Rate of Change?",
          "tooltip": "The Rate of Change indicator (ROC) is a momentum oscillator. It calculates the percent change in plotOfPrice between periods. If possitive it will take an entry.",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_221",
          "inline": "adx_mtf",
          "isFake": true,
          "name": "Enable ADX MTF ? 🚨",
          "type": "bool"
        },
        {
          "defval": "",
          "display": 15,
          "group": " ▓▓▓     ADX Settings - Extra Filters 🏆",
          "id": "in_222",
          "inline": "adx_mtf",
          "isFake": true,
          "name": "ADX Timeframe (BETA)",
          "tooltip": "Tradingview data is pulled from higher time frames, this can cause repainting and is not always relyable in backtesting. Please be careful. \n MTF may also cause trades to be triggered late.",
          "type": "resolution"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     HA Overlay Settings - Extra Filters 🏆",
          "id": "in_223",
          "isFake": true,
          "name": "Enable HA Overlay ?",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     TDFI Settings - Extra Filter 🏆",
          "id": "in_224",
          "inline": "v1",
          "isFake": true,
          "name": "Volume confirm?",
          "type": "bool"
        },
        {
          "defval": "v1",
          "display": 15,
          "group": " ▓▓▓     TDFI Settings - Extra Filter 🏆",
          "id": "in_225",
          "isFake": true,
          "name": "Version to use?",
          "options": [
            "v1",
            "v2"
          ],
          "type": "text"
        },
        {
          "defval": 20,
          "display": 15,
          "group": " ▓▓▓     TDFI Settings - Extra Filter 🏆",
          "id": "in_226",
          "inline": "v1",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "TDFI Lookback",
          "type": "integer"
        },
        {
          "defval": 0.05,
          "display": 15,
          "group": " ▓▓▓     TDFI Settings - Extra Filter 🏆",
          "id": "in_227",
          "inline": "v2",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Filter High",
          "step": 0.01,
          "type": "float"
        },
        {
          "defval": -0.05,
          "display": 15,
          "group": " ▓▓▓     TDFI Settings - Extra Filter 🏆",
          "id": "in_228",
          "inline": "v2",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Filter Low",
          "step": 0.01,
          "type": "float"
        },
        {
          "defval": 13,
          "display": 15,
          "group": " ▓▓▓     TDFI Settings - Extra Filter 🏆",
          "id": "in_229",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "MMA Length v2",
          "type": "integer"
        },
        {
          "defval": "ema",
          "display": 15,
          "group": " ▓▓▓     TDFI Settings - Extra Filter 🏆",
          "id": "in_230",
          "isFake": true,
          "name": "MMA Mode v2",
          "options": [
            "ema",
            "wma",
            "swma",
            "vwma",
            "hull",
            "tema"
          ],
          "type": "text"
        },
        {
          "defval": "ema",
          "display": 15,
          "group": " ▓▓▓     TDFI Settings - Extra Filter 🏆",
          "id": "in_231",
          "isFake": true,
          "name": "SMMA Mode v2",
          "options": [
            "ema",
            "wma",
            "swma",
            "vwma",
            "hull",
            "tema"
          ],
          "type": "text"
        },
        {
          "defval": 3,
          "display": 15,
          "group": " ▓▓▓     TDFI Settings - Extra Filter 🏆",
          "id": "in_232",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "N Length v2",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     MFI Settings - Extra Filters 🏆",
          "id": "in_233",
          "isFake": true,
          "name": "Enable MFI ?",
          "type": "bool"
        },
        {
          "defval": "hlc3",
          "display": 15,
          "group": " ▓▓▓     MFI Settings - Extra Filters 🏆",
          "id": "in_234",
          "isFake": true,
          "name": "MFI Source",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": 14,
          "display": 15,
          "group": " ▓▓▓     MFI Settings - Extra Filters 🏆",
          "id": "in_235",
          "isFake": true,
          "name": "MFI Length",
          "type": "integer"
        },
        {
          "defval": 51,
          "display": 15,
          "group": " ▓▓▓     MFI Settings - Extra Filters 🏆",
          "id": "in_236",
          "isFake": true,
          "name": "MFI Overbrought",
          "type": "integer"
        },
        {
          "defval": 49,
          "display": 15,
          "group": " ▓▓▓     MFI Settings - Extra Filters 🏆",
          "id": "in_237",
          "isFake": true,
          "name": "MFI Oversold",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     MFI Settings - Extra Filters 🏆",
          "id": "in_238",
          "inline": "mfi_mtf",
          "isFake": true,
          "name": "Enable MFI MTF ? 🚨",
          "type": "bool"
        },
        {
          "defval": "",
          "display": 15,
          "group": " ▓▓▓     MFI Settings - Extra Filters 🏆",
          "id": "in_239",
          "inline": "mfi_mtf",
          "isFake": true,
          "name": "MFI Timeframe (BETA)",
          "tooltip": "Tradingview data is pulled from higher time frames, this can cause repainting and is not always relyable in backtesting. Please be careful.\n MTF may also cause trades to be triggered late.",
          "type": "resolution"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Flat Market  - Extra Filters 🏆",
          "id": "in_240",
          "isFake": true,
          "name": "Enable Flat Market ?",
          "type": "bool"
        },
        {
          "defval": "VWMA",
          "display": 15,
          "group": " ▓▓▓     Flat Market  - Extra Filters 🏆",
          "id": "in_241",
          "inline": "f1",
          "isFake": true,
          "name": "MA Type Flat Market",
          "options": [
            "Static",
            "EMA",
            "SMA",
            "HMA",
            "WMA",
            "DEMA",
            "VWMA",
            "T3"
          ],
          "type": "text"
        },
        {
          "defval": 75,
          "display": 15,
          "group": " ▓▓▓     Flat Market  - Extra Filters 🏆",
          "id": "in_242",
          "inline": "f1",
          "isFake": true,
          "max": 1000000000000,
          "min": 1,
          "name": "MA Length Flat Market",
          "type": "integer"
        },
        {
          "defval": 30,
          "display": 15,
          "group": " ▓▓▓     Flat Market  - Extra Filters 🏆",
          "id": "in_243",
          "isFake": true,
          "max": 100,
          "min": 0,
          "name": "Flat Market Above Line",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Flat Market  - Extra Filters 🏆",
          "id": "in_244",
          "isFake": true,
          "name": "Use Rate of Change?",
          "tooltip": "The Rate of Change indicator (ROC) is a momentum oscillator. It calculates the percent change in plotOfPrice between periods. If possitive it will take an entry.",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Flat Market  - Extra Filters 🏆",
          "id": "in_245",
          "inline": "fm_mtf",
          "isFake": true,
          "name": "Enable FM MTF ? 🚨",
          "type": "bool"
        },
        {
          "defval": "",
          "display": 15,
          "group": " ▓▓▓     Flat Market  - Extra Filters 🏆",
          "id": "in_246",
          "inline": "fm_mtf",
          "isFake": true,
          "name": "FM Timeframe (BETA)",
          "tooltip": "Tradingview data is pulled from higher time frames, this can cause repainting and is not always relyable in backtesting. Please be careful.\n MTF may also cause trades to be triggered late.",
          "type": "resolution"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     VWAP crossover - Extra Filters 🏆",
          "id": "in_247",
          "isFake": true,
          "name": "Use vWap / ema",
          "type": "bool"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓     VWAP crossover - Extra Filters 🏆",
          "id": "in_248",
          "isFake": true,
          "name": "vWap Source",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": "close",
          "display": 15,
          "group": " ▓▓▓     VWAP crossover - Extra Filters 🏆",
          "id": "in_249",
          "isFake": true,
          "name": "vWap2 Source",
          "options": [
            "open",
            "high",
            "low",
            "close",
            "hl2",
            "hlc3",
            "hlcc4",
            "ohlc4"
          ],
          "type": "source"
        },
        {
          "defval": 3,
          "display": 15,
          "group": " ▓▓▓     VWAP crossover - Extra Filters 🏆",
          "id": "in_250",
          "isFake": true,
          "name": "Vwap Length",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Volume Flow - Extra Filters 🏆",
          "id": "in_251",
          "isFake": true,
          "name": "Enable Volume Flow ?",
          "type": "bool"
        },
        {
          "defval": 130,
          "display": 15,
          "group": " ▓▓▓     Volume Flow - Extra Filters 🏆",
          "id": "in_252",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "VFI length",
          "type": "integer"
        },
        {
          "defval": 0.2,
          "display": 15,
          "group": " ▓▓▓     Volume Flow - Extra Filters 🏆",
          "id": "in_253",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Coef",
          "type": "float"
        },
        {
          "defval": 2.5,
          "display": 15,
          "group": " ▓▓▓     Volume Flow - Extra Filters 🏆",
          "id": "in_254",
          "isFake": true,
          "max": 1000000000000,
          "min": -1000000000000,
          "name": "Max. vol. cutoff",
          "type": "float"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Volume Flow - Extra Filters 🏆",
          "id": "in_255",
          "inline": "vf_mtf",
          "isFake": true,
          "name": "Enable Volume Flow MTF ? 🚨",
          "type": "bool"
        },
        {
          "defval": "",
          "display": 15,
          "group": " ▓▓▓     Volume Flow - Extra Filters 🏆",
          "id": "in_256",
          "inline": "vf_mtf",
          "isFake": true,
          "name": "VF Timeframe (BETA)",
          "tooltip": "Tradingview data is pulled from higher time frames, this can cause repainting and is not always relyable in backtesting. Please be careful.\n MTF may also cause trades to be triggered late.",
          "type": "resolution"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Bull Bear Power - Extra Filters 🏆",
          "id": "in_257",
          "isFake": true,
          "name": "Enable Bull Bear Power?",
          "tooltip": "Use the Bull Bear Power indicator for confluence. If BBP is above 0 confirm LONG. If BBP is below 0 confirm shorts",
          "type": "bool"
        },
        {
          "defval": 13,
          "display": 15,
          "group": " ▓▓▓     Bull Bear Power - Extra Filters 🏆",
          "id": "in_258",
          "isFake": true,
          "name": "Custom Length for BBP",
          "type": "integer"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓     Bull Bear Power - Extra Filters 🏆",
          "id": "in_259",
          "inline": "bbp_mtf",
          "isFake": true,
          "name": "Enable BBP MTF ? 🚨",
          "type": "bool"
        },
        {
          "defval": "",
          "display": 15,
          "group": " ▓▓▓     Bull Bear Power - Extra Filters 🏆",
          "id": "in_260",
          "inline": "bbp_mtf",
          "isFake": true,
          "name": "BBP Timeframe (BETA)",
          "tooltip": "Tradingview data is pulled from higher time frames, this can cause repainting and is not always relyable in backtesting. Please be careful.\n MTF may also cause trades to be triggered late.",
          "type": "resolution"
        },
        {
          "defval": "GMT+2",
          "display": 15,
          "group": " ▓▓▓    🌎 Time & Date - Global Settings",
          "id": "in_261",
          "isFake": true,
          "name": "Timezone",
          "options": [
            "GMT-12",
            "GMT-11",
            "GMT-10",
            "GMT-9",
            "GMT-8",
            "GMT-7",
            "CST",
            "GMT-6",
            "GMT-5",
            "GMT-4",
            "GMT-3",
            "GMT-2",
            "GMT-1",
            "GMT",
            "GMT+1",
            "GMT+2",
            "GMT+3",
            "GMT+4",
            "GMT+5",
            "GMT+6",
            "GMT+7",
            "GMT+8",
            "GMT+9",
            "GMT+10",
            "GMT+11",
            "GMT+12"
          ],
          "type": "text"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🌎 Time & Date - Global Settings",
          "id": "in_262",
          "isFake": true,
          "name": "Active Sessions & Week Days? (READ TOOLTIP)",
          "tooltip": "To utilize the Week Days, Sessions, or Filters functionality in your trading strategy, you need to activate the USE_SESSIONS checkbox.\n\nEnabling this option is necessary if you want your strategy to consider specific weekdays, trading sessions, or apply certain filters to optimize its performance.\n\nPlease ensure that you activate this checkbox if you intend to use any of the aforementioned features. Otherwise, you can leave it unchecked if you don't require these functionalities in your strategy",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    📅 Week Days to enter trade?",
          "id": "in_263",
          "inline": "weekdays",
          "isFake": true,
          "name": "Mon",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    📅 Week Days to enter trade?",
          "id": "in_264",
          "inline": "weekdays",
          "isFake": true,
          "name": "Tue",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    📅 Week Days to enter trade?",
          "id": "in_265",
          "inline": "weekdays",
          "isFake": true,
          "name": "Wed",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    📅 Week Days to enter trade?",
          "id": "in_266",
          "inline": "weekdays",
          "isFake": true,
          "name": "Thur",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    📅 Week Days to enter trade?",
          "id": "in_267",
          "inline": "weekdays",
          "isFake": true,
          "name": "Fri",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    📅 Week Days to enter trade?",
          "id": "in_268",
          "inline": "weekdays",
          "isFake": true,
          "name": "Sat",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    📅 Week Days to enter trade?",
          "id": "in_269",
          "inline": "weekdays",
          "isFake": true,
          "name": "Sun",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    ⏰ Session Filters",
          "id": "in_270",
          "isFake": true,
          "name": "Session Background Color",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    ⏰ Session Filters",
          "id": "in_271",
          "inline": "cussseion",
          "isFake": true,
          "name": "Allow Trades in Custom Session 1",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    ⏰ Session Filters",
          "id": "in_272",
          "inline": "cussseion",
          "isFake": true,
          "name": "Custom Session 2",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    ⏰ Session Filters",
          "id": "in_273",
          "isFake": true,
          "name": "Trade 24/7 (Normally for Crypto)",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    ⏰ Session Filters",
          "id": "in_274",
          "isFake": true,
          "name": "End of Session Close All Trades?",
          "type": "bool"
        },
        {
          "defval": "0300-1200:1234567",
          "display": 15,
          "group": " ▓▓▓    ⏰ Session Filters",
          "id": "in_275",
          "isFake": true,
          "name": "Session 1",
          "type": "session"
        },
        {
          "defval": "0800-1700:1234567",
          "display": 15,
          "group": " ▓▓▓    ⏰ Session Filters",
          "id": "in_276",
          "isFake": true,
          "name": "Session 2",
          "type": "session"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    ⏰   Date Filters Backtest  ",
          "id": "in_277",
          "isFake": true,
          "name": "Use Date Filter for BackTeser (Active Above)",
          "tooltip": "Turns on/off time session filter",
          "type": "bool"
        },
        {
          "defval": 946684800000,
          "display": 0,
          "group": " ▓▓▓    ⏰   Date Filters Backtest  ",
          "id": "in_278",
          "isFake": true,
          "name": "Start Filter",
          "tooltip": "Start date & time to begin backtest period. Also useful for beginning new bot. eg. Set time to now to make broker emulator in a flat position before setting alerts",
          "type": "time"
        },
        {
          "defval": 4070908800000,
          "display": 0,
          "group": " ▓▓▓    ⏰   Date Filters Backtest  ",
          "id": "in_279",
          "isFake": true,
          "name": "End Filter",
          "tooltip": "End date & time to stop searching for setups for back testing.",
          "type": "time"
        },
        {
          "defval": "Once per bar",
          "display": 15,
          "group": " ▓▓▓      The Alerts - Global",
          "id": "in_280",
          "isFake": true,
          "name": "Alert Frequency",
          "options": [
            "Once per bar",
            "Once per close",
            "All"
          ],
          "tooltip": "Select the frequency at which alerts are triggered.\n\nNote: This setting is specifically designed for manual trading purposes.",
          "type": "text"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓      The Alerts - Global",
          "id": "in_281",
          "isFake": true,
          "name": "Use Immediately?",
          "tooltip": "Immediately An optional parameter. If true, the closing order will be executed on the tick where it has been placed, ignoring the strategy parameters that restrict the order execution to the open of the next bar. The default is false.",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🟢 -- Live Trading (IMPORTANT) -- 🟢",
          "id": "in_282",
          "isFake": true,
          "name": "LIVE TRADING 🏄",
          "tooltip": "This feature is crucial for implementing your trading strategy in a live environment. By specifying the Live Trading Start Date, the system will calculate the margin requirements and performance metrics from this specific date onwards. Additionally, it enables accurate forward testing by recording and analyzing results starting from the specified date. Make sure to set the Live Trading Start Date appropriately to align with your desired trading approach and historical data analysis. Explainer video on www.trigger.trade.",
          "type": "bool"
        },
        {
          "defval": 1686787200000,
          "display": 0,
          "group": " ▓▓▓    🟢 -- Live Trading (IMPORTANT) -- 🟢",
          "id": "in_283",
          "isFake": true,
          "name": "STARTING DATE",
          "tooltip": "Enter the date you began live trading. You can drag and drop after. Explainer video on www.trigger.trade.",
          "type": "time"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🔔🤖 -- Use Simple Bot by Trigger.Trade? -- 🤖",
          "id": "in_284",
          "isFake": true,
          "name": "Use Simple Bot?",
          "tooltip": "This is the simplest way of connecting tradingview to bots, I suggest watching the video on the trigger.trade website. Each system has it's own limits and risks.",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🔔🤖 -- Use Simple Bot by Trigger.Trade? -- 🤖",
          "id": "in_285",
          "inline": "lazytpsl",
          "isFake": true,
          "name": "Use Saftey TP",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🔔🤖 -- Use Simple Bot by Trigger.Trade? -- 🤖",
          "id": "in_286",
          "inline": "lazytpsl",
          "isFake": true,
          "name": "Use Saftey SL",
          "tooltip": "This will add conditional a limit TP & SL to your exchange. \n This means the TP/SL are set in stone. \n Please note this may change the way your strategy works. For example, ignore wicks will not work with this function.",
          "type": "bool"
        },
        {
          "defval": "",
          "display": 15,
          "group": " ▓▓▓    🔔🤖 -- Use Simple Bot by Trigger.Trade? -- 🤖",
          "id": "in_287",
          "inline": "exchangeAPI",
          "isFake": true,
          "name": "Telegram Channel ID",
          "tooltip": "Receive messages via telegram. There is an explainer video on trigger.trade",
          "type": "text"
        },
        {
          "defval": "For Connections with 3rd Party services.  \n Try www.trigger.trade \n **Placeholders** \n Close : #close# \n TP #LongTP# \n TP1 : #LongTP1#  \n TP2 : #LongTP2# \n FULL : #LongTPFULL# ... \n More on www.davidd.tech/placeholders or MT4 or MT5 TO CONNECT https://davidd.tech/pc  \n\n ",
          "display": 0,
          "group": " ▓▓▓    🔔  The Alerts (Advanced Mode) 🔔",
          "id": "in_288",
          "isFake": true,
          "name": "API Entry - Long",
          "type": "text_area"
        },
        {
          "defval": "Exit or Close BOT API for exiting LONG positions.",
          "display": 0,
          "group": " ▓▓▓    🔔  The Alerts (Advanced Mode) 🔔",
          "id": "in_289",
          "isFake": true,
          "name": "API Exit - Long",
          "type": "text_area"
        },
        {
          "defval": "For Connections with 3rd Party services. \n  Try www.trigger.trade \n **Placeholders** \n Close : #close# \n TP #ShortTP# \n TP1 : #ShortTP1#  \n TP2 : #ShortTP2# \n FULL : #ShortTPFULL# ... \n More on www.davidd.tech/placeholders or MT4 or MT5 TO CONNECT https://davidd.tech/pc \n\n",
          "display": 0,
          "group": " ▓▓▓    🔔  The Alerts (Advanced Mode) 🔔",
          "id": "in_290",
          "isFake": true,
          "name": "API Entry - Short",
          "type": "text_area"
        },
        {
          "defval": "Exit or Close BOT API for exiting SHORT positions.",
          "display": 0,
          "group": " ▓▓▓    🔔  The Alerts (Advanced Mode) 🔔",
          "id": "in_291",
          "isFake": true,
          "name": "API Exit - Short",
          "type": "text_area"
        },
        {
          "defval": "API SERVICES CODE for LONG TP 1",
          "display": 0,
          "group": " ▓▓▓      The Alerts - Multiple Take Profit Levels (Legacy Mode)",
          "id": "in_292",
          "isFake": true,
          "name": "API First TP - Long",
          "type": "text_area"
        },
        {
          "defval": "API SERVICES CODE for SHORT TP 1",
          "display": 0,
          "group": " ▓▓▓      The Alerts - Multiple Take Profit Levels (Legacy Mode)",
          "id": "in_293",
          "isFake": true,
          "name": "API First TP - Short",
          "type": "text_area"
        },
        {
          "defval": "API SERVICES CODE for LONG TP 2",
          "display": 0,
          "group": " ▓▓▓      The Alerts - Multiple Take Profit Levels (Legacy Mode)",
          "id": "in_294",
          "isFake": true,
          "name": "API Second TP - Long",
          "type": "text_area"
        },
        {
          "defval": "API SERVICES CODE for SHORT TP 2",
          "display": 0,
          "group": " ▓▓▓      The Alerts - Multiple Take Profit Levels (Legacy Mode)",
          "id": "in_295",
          "isFake": true,
          "name": "API Second TP - Short",
          "type": "text_area"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_296",
          "isFake": true,
          "name": "Show Entry/SL/TP",
          "tooltip": "Shows the trade entry level",
          "type": "bool"
        },
        {
          "defval": "Auto",
          "display": 15,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_297",
          "inline": "Table",
          "isFake": true,
          "name": "Desktop or Mobile",
          "options": [
            "Auto",
            "Desktop",
            "Mobile"
          ],
          "type": "text"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_298",
          "isFake": true,
          "name": "Show Labels",
          "tooltip": "Shows the trade entry level",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_299",
          "isFake": true,
          "name": "Show trail trigger plotOfPrice",
          "tooltip": "Shows the level that the trailing stop is triggered",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_300",
          "inline": "Dash",
          "isFake": true,
          "name": "Full Dashboard 🐌",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_301",
          "inline": "Dash",
          "isFake": true,
          "name": "Trade",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_302",
          "inline": "Dash",
          "isFake": true,
          "name": "Indicators",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_303",
          "inline": "Dash",
          "isFake": true,
          "name": "Backtests",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_304",
          "inline": "Dash",
          "isFake": true,
          "name": "PnL  🐌",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_305",
          "inline": "Dash",
          "isFake": true,
          "name": "Watermark?",
          "type": "bool"
        },
        {
          "defval": false,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_306",
          "inline": "Dash",
          "isFake": true,
          "name": "Log",
          "type": "bool"
        },
        {
          "defval": true,
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_307",
          "inline": "Color",
          "isFake": true,
          "name": "Dark Mode | Bull | Bear | Notr",
          "type": "bool"
        },
        {
          "defval": "rgba(3,77,64,1)",
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_308",
          "inline": "Color",
          "isFake": true,
          "name": "",
          "type": "color"
        },
        {
          "defval": "rgba(183,29,29,1)",
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_309",
          "inline": "Color",
          "isFake": true,
          "name": "",
          "type": "color"
        },
        {
          "defval": "rgba(14,71,161,0.15)",
          "display": 0,
          "group": " ▓▓▓    🤓 DaviddTech Dashboard",
          "id": "in_310",
          "inline": "Color",
          "isFake": true,
          "name": "",
          "type": "color"
        },
        {
          "defval": " ",
          "display": 15,
          "group": " ▓▓▓    DaviddTech Dashboard",
          "id": "in_311",
          "isFake": true,
          "name": "Notes",
          "type": "text"
        },
        {
          "defval": false,
          "groupId": "strategy_props",
          "id": "in_312",
          "internalID": "calc_on_every_tick",
          "isFake": true,
          "name": "Calculate Strategy on every Tick(s)",
          "tooltip": "Recalculates the strategy with each real-time bar update",
          "type": "bool",
          "display": 0
        },
        {
          "defval": false,
          "groupId": "strategy_props",
          "id": "in_313",
          "internalID": "calc_on_order_fills",
          "isFake": true,
          "name": "Calculate Strategy on Order's Fill(s)",
          "tooltip": "Triggers an additional intrabar calculation after order fills",
          "type": "bool",
          "display": 0
        },
        {
          "defval": "percent_of_equity",
          "groupId": "strategy_props",
          "id": "in_314",
          "internalID": "default_qty_type",
          "isFake": true,
          "name": "Default entry/order Qty Type",
          "options": [
            "fixed",
            "cash_per_order",
            "percent_of_equity"
          ],
          "tooltip": "Quantity per trade in the selected unit",
          "type": "text",
          "display": 15
        },
        {
          "defval": 0.05,
          "groupId": "strategy_props",
          "id": "in_315",
          "internalID": "commission_value",
          "isFake": true,
          "min": 0,
          "name": "Commission Value",
          "type": "float",
          "display": 15
        },
        {
          "defval": 6,
          "groupId": "strategy_props",
          "id": "in_316",
          "internalID": "pyramiding",
          "isFake": true,
          "max": 1000000,
          "min": 0,
          "name": "pyramiding",
          "tooltip": "Maximum number of successive entries allowed in the same direction",
          "type": "integer",
          "display": 15
        },
        {
          "defval": "percent",
          "groupId": "strategy_props",
          "id": "in_317",
          "internalID": "commission_type",
          "isFake": true,
          "name": "Commission Type",
          "options": [
            "percent",
            "cash_per_contract",
            "cash_per_order"
          ],
          "tooltip": "Entry and exit fees to be paid",
          "type": "text",
          "display": 15
        },
        {
          "defval": 0,
          "groupId": "strategy_props",
          "id": "in_318",
          "internalID": "slippage",
          "isFake": true,
          "max": 1000000,
          "min": 0,
          "name": "Backtesting slippage for market orders",
          "tooltip": "Ticks to be added to the fill price of market and stop orders",
          "type": "integer",
          "display": 15
        },
        {
          "defval": "USD",
          "groupId": "strategy_props",
          "id": "in_319",
          "internalID": "currency",
          "isFake": true,
          "name": "Base Currency",
          "options": [
            "NONE",
            "USD",
            "EUR",
            "AUD",
            "GBP",
            "NZD",
            "CAD",
            "CHF",
            "HKD",
            "JPY",
            "NOK",
            "RUB",
            "SEK",
            "SGD",
            "TRY",
            "ZAR",
            "BTC",
            "ETH",
            "MYR",
            "KRW",
            "USDT",
            "INR"
          ],
          "tooltip": "Currency used in calculations and strategy results",
          "type": "text",
          "display": 15
        },
        {
          "defval": 100,
          "groupId": "strategy_props",
          "id": "in_320",
          "internalID": "default_qty_value",
          "isFake": true,
          "min": 0,
          "name": "Default entry/order Qty Value",
          "type": "float",
          "display": 15
        },
        {
          "defval": 100000,
          "groupId": "strategy_props",
          "id": "in_321",
          "internalID": "initial_capital",
          "isFake": true,
          "min": 0,
          "name": "Initial Capital",
          "tooltip": "Starting funds available for the trading strategy",
          "type": "float",
          "display": 15
        },
        {
          "defval": 0,
          "groupId": "strategy_props",
          "id": "in_322",
          "internalID": "backtest_fill_limits_assumption",
          "isFake": true,
          "max": 1000000,
          "min": 0,
          "name": "Backtesting Limit Order(s) fill assumption",
          "tooltip": "Ticks beyond the limit price required for limit order execution",
          "type": "integer",
          "display": 15
        },
        {
          "defval": false,
          "groupId": "strategy_props",
          "id": "in_323",
          "internalID": "process_orders_on_close",
          "isFake": true,
          "name": "Process orders on bar Close",
          "tooltip": "Fills market orders on the close of the bar where they are issued",
          "type": "bool",
          "display": 0
        },
        {
          "defval": "FIFO",
          "groupId": "strategy_props",
          "id": "in_324",
          "internalID": "close_entries_rule",
          "isFake": true,
          "name": "Close entries rule",
          "options": [
            "FIFO",
            "ANY"
          ],
          "type": "text",
          "display": 15
        },
        {
          "defval": 0,
          "groupId": "strategy_props",
          "id": "in_325",
          "internalID": "margin_long",
          "isFake": true,
          "min": 0,
          "name": "Margin Long",
          "tooltip": "Percentage of the long position the strategy must fund from equity",
          "type": "float",
          "display": 15
        },
        {
          "defval": 0,
          "groupId": "strategy_props",
          "id": "in_326",
          "internalID": "margin_short",
          "isFake": true,
          "min": 0,
          "name": "Margin Short",
          "tooltip": "Percentage of the short position the strategy must fund from equity",
          "type": "float",
          "display": 15
        },
        {
          "defval": "BACKTEST",
          "groupId": "strategy_props",
          "id": "in_327",
          "internalID": "run_mode",
          "isFake": true,
          "name": "Run mode: 'backtest', 'alert' or something else",
          "options": [
            "BACKTEST",
            "ALERT"
          ],
          "type": "text",
          "display": 15
        },
        {
          "defval": "",
          "groupId": "strategy_props",
          "id": "in_328",
          "internalID": "alert_message",
          "isFake": true,
          "name": "Alert message template for run mode 'alert'",
          "type": "text",
          "display": 15
        },
        {
          "defval": "order_fills",
          "groupId": "strategy_props",
          "id": "in_329",
          "internalID": "alert_type",
          "isFake": true,
          "name": "Alert type for run mode 'alert'",
          "type": "text",
          "display": 15
        },
        {
          "defval": "",
          "groupId": "strategy_props",
          "id": "in_330",
          "isFake": true,
          "name": "exclude_from_report",
          "type": "text",
          "display": 15
        },
        {
          "defval": 2,
          "groupId": "strategy_props",
          "id": "in_331",
          "internalID": "risk_free_rate",
          "isFake": true,
          "max": 100,
          "min": 0,
          "name": "risk_free_rate",
          "type": "float",
          "display": 15
        },
        {
          "defval": false,
          "groupId": "strategy_props",
          "id": "in_332",
          "internalID": "use_bar_magnifier",
          "isFake": true,
          "name": "Use Bar Magnifier",
          "tooltip": "On historical bars, uses more precise lower timeframe prices for more realistic results",
          "type": "bool",
          "display": 0
        },
        {
          "defval": false,
          "groupId": "strategy_props",
          "id": "in_333",
          "internalID": "fill_orders_on_standard_ohlc",
          "isFake": true,
          "name": "Fill orders using standard OHLC",
          "tooltip": "Forces strategies running on Heikin Ashi charts to fill orders using actual OHLC prices, for more realistic results",
          "type": "bool",
          "display": 0
        },
        {
          "defval": false,
          "groupId": "strategy_props",
          "id": "in_334",
          "isFake": true,
          "name": "trim_orders",
          "type": "bool",
          "display": 0
        },
        {
          "defval": "",
          "groupId": "strategy_props",
          "id": "in_335",
          "internalID": "__calc_range",
          "isFake": true,
          "name": "calc_range",
          "type": "text",
          "display": 15
        },
        {
          "defval": false,
          "id": "__profile",
          "isFake": true,
          "isHidden": true,
          "migrate": true,
          "name": "",
          "type": "bool",
          "display": 0
        }
      ],
      "plots": [
        {
          "id": "plot_0",
          "type": "line"
        },
        {
          "id": "plot_1",
          "type": "line"
        },
        {
          "id": "plot_2",
          "type": "line"
        },
        {
          "id": "plot_3",
          "type": "line"
        },
        {
          "id": "plot_4",
          "type": "bg_colorer"
        },
        {
          "id": "plot_5",
          "type": "bg_colorer"
        },
        {
          "id": "plot_6",
          "type": "bg_colorer"
        },
        {
          "id": "plot_7",
          "type": "line"
        },
        {
          "id": "plot_8",
          "type": "line"
        },
        {
          "id": "plot_9",
          "target": "plot_8",
          "type": "colorer"
        },
        {
          "id": "plot_10",
          "type": "line"
        },
        {
          "id": "plot_11",
          "target": "plot_10",
          "type": "colorer"
        },
        {
          "id": "plot_12",
          "type": "line"
        },
        {
          "id": "plot_13",
          "type": "line"
        },
        {
          "id": "plot_14",
          "target": "plot_13",
          "type": "colorer"
        },
        {
          "id": "plot_15",
          "target": "fill_1",
          "type": "colorer"
        },
        {
          "id": "plot_16",
          "type": "line"
        },
        {
          "id": "plot_17",
          "type": "line"
        },
        {
          "id": "plot_18",
          "type": "line"
        },
        {
          "id": "plot_19",
          "type": "line"
        },
        {
          "id": "plot_20",
          "type": "line"
        },
        {
          "id": "plot_21",
          "type": "line"
        },
        {
          "id": "plot_22",
          "type": "bg_colorer"
        },
        {
          "id": "plot_23",
          "type": "bg_colorer"
        },
        {
          "id": "plot_24",
          "type": "bar_colorer"
        },
        {
          "id": "plot_25",
          "type": "bar_colorer"
        },
        {
          "id": "plot_26",
          "type": "bg_colorer"
        }
      ],
      "graphics": {
        "dwglabels": {
          "labels": {
            "name": "labels",
            "title": "Labels"
          }
        },
        "dwglines": {
          "lines": {
            "name": "lines",
            "title": "Lines"
          }
        },
        "dwgtablecells": {
          "tableCells": {
            "name": "tableCells",
            "title": "TablesCells"
          }
        },
        "dwgtables": {
          "tables": {
            "name": "tables",
            "title": "Tables"
          }
        }
      },
      "defaults": {
        "filledAreasStyle": {
          "fill_0": {
            "color": "rgba(255,82,82,0.1)",
            "transparency": 0,
            "visible": true
          },
          "fill_1": {
            "color": "#2962ff",
            "transparency": 0,
            "visible": true
          },
          "fill_2": {
            "color": "rgba(76,175,80,0.1)",
            "transparency": 0,
            "visible": true
          },
          "fill_3": {
            "color": "rgba(255,235,59,0.1)",
            "transparency": 0,
            "visible": true
          },
          "fill_4": {
            "color": "rgba(255,235,59,0.1)",
            "transparency": 0,
            "visible": true
          },
          "fill_5": {
            "color": "rgba(0,230,118,0.1)",
            "transparency": 0,
            "visible": true
          },
          "fill_6": {
            "color": "rgba(0,230,118,0.1)",
            "transparency": 0,
            "visible": true
          },
          "fill_7": {
            "color": "rgba(255,152,0,0.05)",
            "transparency": 0,
            "visible": true
          },
          "fill_8": {
            "color": "rgba(255,152,0,0.05)",
            "transparency": 0,
            "visible": true
          }
        },
        "graphics": {
          "dwglabels": {
            "labels": {
              "visible": true
            }
          },
          "dwglines": {
            "lines": {
              "visible": true
            }
          },
          "dwgtablecells": {
            "tableCells": {
              "visible": true
            }
          },
          "dwgtables": {
            "tables": {
              "visible": true
            }
          }
        },
        "inputs": {
          "__profile": false,
          "in_0": "5.0.3 @ 0.0.3",
          "in_1": "www.davidd.tech",
          "in_10": false,
          "in_100": false,
          "in_101": 3,
          "in_102": true,
          "in_103": 3,
          "in_104": 1,
          "in_105": false,
          "in_106": 20,
          "in_107": false,
          "in_108": 20,
          "in_109": false,
          "in_11": false,
          "in_110": 20,
          "in_111": false,
          "in_112": 20,
          "in_113": "Percent",
          "in_114": 20,
          "in_115": 1,
          "in_116": true,
          "in_117": 25,
          "in_118": 25,
          "in_119": 100,
          "in_12": false,
          "in_120": false,
          "in_121": false,
          "in_122": 0.5,
          "in_123": "Dynamic Algo",
          "in_124": "ATR",
          "in_125": 0.5,
          "in_126": 1,
          "in_127": 1.5,
          "in_128": "https://youtu.be/4PB227Y_3CY",
          "in_129": false,
          "in_13": true,
          "in_130": "NORMAL",
          "in_131": 2,
          "in_132": false,
          "in_133": 6,
          "in_134": false,
          "in_135": 1.1,
          "in_136": 1.1,
          "in_137": 1,
          "in_138": false,
          "in_139": 1,
          "in_14": "Both",
          "in_140": false,
          "in_141": "Use Percentage Instead",
          "in_142": 1,
          "in_143": false,
          "in_144": "Use Percentage Instead",
          "in_145": 2.5,
          "in_146": false,
          "in_147": "EMA",
          "in_148": 50,
          "in_149": "close",
          "in_15": true,
          "in_150": "OFF",
          "in_151": 1.5,
          "in_152": 0,
          "in_153": false,
          "in_154": false,
          "in_155": false,
          "in_156": 33,
          "in_157": 33,
          "in_158": 100,
          "in_159": 33,
          "in_16": "close",
          "in_160": 66,
          "in_161": 100,
          "in_162": 14,
          "in_163": "Off",
          "in_164": false,
          "in_165": false,
          "in_166": false,
          "in_167": false,
          "in_168": false,
          "in_169": false,
          "in_17": "close",
          "in_170": false,
          "in_171": "EMA",
          "in_172": "EMA",
          "in_173": "EMA",
          "in_174": "EMA",
          "in_175": "T3",
          "in_176": 9,
          "in_177": 21,
          "in_178": 55,
          "in_179": 100,
          "in_18": 10,
          "in_180": 300,
          "in_181": 100,
          "in_182": false,
          "in_183": 5,
          "in_184": false,
          "in_185": false,
          "in_186": false,
          "in_187": false,
          "in_188": false,
          "in_189": false,
          "in_19": 10,
          "in_190": false,
          "in_191": 10,
          "in_192": 60,
          "in_193": false,
          "in_194": 100,
          "in_195": 3,
          "in_196": false,
          "in_197": "Standard",
          "in_198": "close",
          "in_199": 14,
          "in_2": "discord.gg/daviddtech",
          "in_20": "close",
          "in_200": 75,
          "in_201": 25,
          "in_202": "MA",
          "in_203": 14,
          "in_204": false,
          "in_205": false,
          "in_206": 64,
          "in_207": "Trending Market",
          "in_208": false,
          "in_209": "Normal",
          "in_21": "close",
          "in_210": "Static",
          "in_211": 14,
          "in_212": 30,
          "in_213": 200,
          "in_214": false,
          "in_215": 14,
          "in_216": 19,
          "in_217": 100,
          "in_218": 2,
          "in_219": false,
          "in_22": ">",
          "in_220": false,
          "in_221": false,
          "in_222": "",
          "in_223": false,
          "in_224": false,
          "in_225": "v1",
          "in_226": 20,
          "in_227": 0.05,
          "in_228": -0.05,
          "in_229": 13,
          "in_23": "<",
          "in_230": "ema",
          "in_231": "ema",
          "in_232": 3,
          "in_233": false,
          "in_234": "hlc3",
          "in_235": 14,
          "in_236": 51,
          "in_237": 49,
          "in_238": false,
          "in_239": "",
          "in_24": "First Indicator",
          "in_240": false,
          "in_241": "VWMA",
          "in_242": 75,
          "in_243": 30,
          "in_244": false,
          "in_245": false,
          "in_246": "",
          "in_247": false,
          "in_248": "close",
          "in_249": "close",
          "in_25": "First Indicator",
          "in_250": 3,
          "in_251": false,
          "in_252": 130,
          "in_253": 0.2,
          "in_254": 2.5,
          "in_255": false,
          "in_256": "",
          "in_257": false,
          "in_258": 13,
          "in_259": false,
          "in_26": "close",
          "in_260": "",
          "in_261": "GMT+2",
          "in_262": false,
          "in_263": true,
          "in_264": true,
          "in_265": true,
          "in_266": true,
          "in_267": true,
          "in_268": true,
          "in_269": true,
          "in_27": "close",
          "in_270": false,
          "in_271": false,
          "in_272": false,
          "in_273": true,
          "in_274": false,
          "in_275": "0300-1200:1234567",
          "in_276": "0800-1700:1234567",
          "in_277": false,
          "in_278": 946684800000,
          "in_279": 4070908800000,
          "in_28": 10,
          "in_280": "Once per bar",
          "in_281": true,
          "in_282": false,
          "in_283": 1686787200000,
          "in_284": false,
          "in_285": false,
          "in_286": false,
          "in_287": "",
          "in_288": "For Connections with 3rd Party services.  \n Try www.trigger.trade \n **Placeholders** \n Close : #close# \n TP #LongTP# \n TP1 : #LongTP1#  \n TP2 : #LongTP2# \n FULL : #LongTPFULL# ... \n More on www.davidd.tech/placeholders or MT4 or MT5 TO CONNECT https://davidd.tech/pc  \n\n ",
          "in_289": "Exit or Close BOT API for exiting LONG positions.",
          "in_29": 10,
          "in_290": "For Connections with 3rd Party services. \n  Try www.trigger.trade \n **Placeholders** \n Close : #close# \n TP #ShortTP# \n TP1 : #ShortTP1#  \n TP2 : #ShortTP2# \n FULL : #ShortTPFULL# ... \n More on www.davidd.tech/placeholders or MT4 or MT5 TO CONNECT https://davidd.tech/pc \n\n",
          "in_291": "Exit or Close BOT API for exiting SHORT positions.",
          "in_292": "API SERVICES CODE for LONG TP 1",
          "in_293": "API SERVICES CODE for SHORT TP 1",
          "in_294": "API SERVICES CODE for LONG TP 2",
          "in_295": "API SERVICES CODE for SHORT TP 2",
          "in_296": true,
          "in_297": "Auto",
          "in_298": true,
          "in_299": true,
          "in_3": "t.me/DaviddTech",
          "in_30": false,
          "in_300": true,
          "in_301": true,
          "in_302": true,
          "in_303": true,
          "in_304": false,
          "in_305": true,
          "in_306": false,
          "in_307": true,
          "in_308": "rgba(3,77,64,1)",
          "in_309": "rgba(183,29,29,1)",
          "in_31": "close",
          "in_310": "rgba(14,71,161,0.15)",
          "in_311": " ",
          "in_312": false,
          "in_313": false,
          "in_314": "percent_of_equity",
          "in_315": 0.05,
          "in_316": 6,
          "in_317": "percent",
          "in_318": 0,
          "in_319": "USD",
          "in_32": "close",
          "in_320": 100,
          "in_321": 100000,
          "in_322": 0,
          "in_323": false,
          "in_324": "FIFO",
          "in_325": 0,
          "in_326": 0,
          "in_327": "BACKTEST",
          "in_328": "",
          "in_329": "order_fills",
          "in_33": ">",
          "in_330": "",
          "in_331": 2,
          "in_332": false,
          "in_333": false,
          "in_334": false,
          "in_335": "",
          "in_34": "<",
          "in_35": "First Indicator",
          "in_36": "First Indicator",
          "in_37": "close",
          "in_38": "close",
          "in_39": 10,
          "in_4": true,
          "in_40": 10,
          "in_41": false,
          "in_42": "close",
          "in_43": "close",
          "in_44": ">",
          "in_45": "<",
          "in_46": "First Indicator",
          "in_47": "First Indicator",
          "in_48": "close",
          "in_49": "close",
          "in_5": true,
          "in_50": 10,
          "in_51": 10,
          "in_52": false,
          "in_53": "close",
          "in_54": "close",
          "in_55": ">",
          "in_56": "<",
          "in_57": "First Indicator",
          "in_58": "First Indicator",
          "in_59": "close",
          "in_6": false,
          "in_60": "close",
          "in_61": 10,
          "in_62": 10,
          "in_63": false,
          "in_64": "close",
          "in_65": "close",
          "in_66": ">",
          "in_67": "<",
          "in_68": "First Indicator",
          "in_69": "First Indicator",
          "in_7": false,
          "in_70": true,
          "in_71": "R:R",
          "in_72": "ATR",
          "in_73": false,
          "in_74": 0.5,
          "in_75": 1.6,
          "in_76": 2.8,
          "in_77": 1.6,
          "in_78": 2.8,
          "in_79": 100,
          "in_8": "NORMAL",
          "in_80": 200,
          "in_81": 100,
          "in_82": 200,
          "in_83": "close",
          "in_84": "close",
          "in_85": 50,
          "in_86": 60,
          "in_87": 1.3,
          "in_88": 1.3,
          "in_89": 9,
          "in_9": true,
          "in_90": 1,
          "in_91": 2.5,
          "in_92": "Source",
          "in_93": "close",
          "in_94": "close",
          "in_95": 14,
          "in_96": false,
          "in_97": "Close",
          "in_98": "Instant",
          "in_99": 15,
          "pineFeatures": "{\"import\":1,\"strategy\":1,\"plot\":1,\"str\":1,\"array\":1,\"ta\":1,\"math\":1,\"alert\":1,\"line\":1,\"label\":1,\"table\":1,\"request.security\":1}",
          "pineId": "",
          "pineVersion": "",
          "text": "bmI9Ks46_6/eroK49BWeQBvsHzbhVxw=="
        },
        "strategy": {
          "orders": {
            "showLabels": true,
            "showQty": true,
            "visible": true
          }
        },
        "styles": {
          "plot_0": {
            "color": "#9C27B0",
            "display": 15,
            "linestyle": 0,
            "linewidth": 4,
            "plottype": 0,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_1": {
            "color": "#FF9800",
            "display": 15,
            "linestyle": 0,
            "linewidth": 4,
            "plottype": 0,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_10": {
            "color": "#2962ff",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_12": {
            "color": "rgba(255,255,255,1)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_13": {
            "color": "#2962ff",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_16": {
            "color": "rgba(255,235,59,1)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_17": {
            "color": "rgba(255,235,59,1)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_18": {
            "color": "rgba(0,230,118,1)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_19": {
            "color": "rgba(0,230,118,1)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_2": {
            "color": "#00E676",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 0,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_20": {
            "color": "rgba(255,152,0,1)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_21": {
            "color": "rgba(255,152,0,1)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_22": {
            "display": 15,
            "transparency": 0
          },
          "plot_23": {
            "display": 15,
            "transparency": 0
          },
          "plot_24": {
            "display": 15
          },
          "plot_25": {
            "display": 15
          },
          "plot_26": {
            "display": 15,
            "transparency": 0
          },
          "plot_3": {
            "color": "#FF5252",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 0,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_4": {
            "display": 15,
            "transparency": 0
          },
          "plot_5": {
            "display": 15,
            "transparency": 0
          },
          "plot_6": {
            "display": 15,
            "transparency": 0
          },
          "plot_7": {
            "color": "rgba(76,175,80,0.4)",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          },
          "plot_8": {
            "color": "#2962ff",
            "display": 15,
            "linestyle": 0,
            "linewidth": 1,
            "plottype": 7,
            "trackPrice": false,
            "transparency": 0
          }
        }
      },
      "_metainfoVersion": 54,
      "behind_chart": true,
      "description": "BotifyX 🧠 by @DaviddTech 🤖",
      "docs": "",
      "filledAreas": [
        {
          "fillgaps": false,
          "id": "fill_0",
          "isHidden": false,
          "objAId": "plot_12",
          "objBId": "plot_13",
          "title": "TP Plot Trail",
          "type": "plot_plot"
        },
        {
          "fillgaps": false,
          "id": "fill_1",
          "isHidden": false,
          "objAId": "plot_12",
          "objBId": "plot_8",
          "title": "Stop Loss Plot",
          "type": "plot_plot"
        },
        {
          "fillgaps": false,
          "id": "fill_2",
          "isHidden": false,
          "objAId": "plot_12",
          "objBId": "plot_10",
          "title": "TP Plot",
          "type": "plot_plot"
        },
        {
          "fillgaps": false,
          "id": "fill_3",
          "isHidden": false,
          "objAId": "plot_12",
          "objBId": "plot_16",
          "title": "TP 50 Long",
          "type": "plot_plot"
        },
        {
          "fillgaps": false,
          "id": "fill_4",
          "isHidden": false,
          "objAId": "plot_12",
          "objBId": "plot_17",
          "title": "TP 50 Short",
          "type": "plot_plot"
        },
        {
          "fillgaps": false,
          "id": "fill_5",
          "isHidden": false,
          "objAId": "plot_17",
          "objBId": "plot_18",
          "title": "TP 50 Long",
          "type": "plot_plot"
        },
        {
          "fillgaps": false,
          "id": "fill_6",
          "isHidden": false,
          "objAId": "plot_17",
          "objBId": "plot_19",
          "title": "TP 50 Short",
          "type": "plot_plot"
        },
        {
          "fillgaps": false,
          "id": "fill_7",
          "isHidden": false,
          "objAId": "plot_8",
          "objBId": "plot_21",
          "title": "Leverage Liqudation long",
          "type": "plot_plot"
        },
        {
          "fillgaps": false,
          "id": "fill_8",
          "isHidden": false,
          "objAId": "plot_8",
          "objBId": "plot_20",
          "title": "Leverage Liqudation short",
          "type": "plot_plot"
        }
      ],
      "format": {
        "type": "inherit"
      },
      "hasAlertFunction": true,
      "historyCalculationMayChange": true,
      "id": "StrategyScript$PUB;69c6abd65d19495e96187f1f1602dbda@tv-scripting-101",
      "isRGB": true,
      "isTVScript": true,
      "isTVScriptStrategy": true,
      "isTVScriptStub": false,
      "is_hidden_study": false,
      "is_price_study": true,
      "pine": {
        "digest": "83204db297f05fe6a168055f6f00d05d3e97db76",
        "version": "10.0"
      },
      "scriptIdPart": "PUB;69c6abd65d19495e96187f1f1602dbda",
      "shortDescription": "BotifyX 🧠 by @DaviddTech 🤖",
      "styles": {
        "plot_0": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Plot"
        },
        "plot_1": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Plot"
        },
        "plot_10": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Target Price"
        },
        "plot_12": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Entry"
        },
        "plot_13": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "trailingStop"
        },
        "plot_16": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Multi Long Take Profit"
        },
        "plot_17": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Multi Short Take Profit"
        },
        "plot_18": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Multi Long Take Profit"
        },
        "plot_19": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Multi Short Take Profit"
        },
        "plot_2": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Plot"
        },
        "plot_20": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "RISK_LEVERAGE line Short"
        },
        "plot_21": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "RISK_LEVERAGE line Long"
        },
        "plot_22": {
          "isHidden": false,
          "title": "Background Color"
        },
        "plot_23": {
          "isHidden": false,
          "title": "Filter Color"
        },
        "plot_24": {
          "isHidden": false,
          "title": "Bar Color"
        },
        "plot_25": {
          "isHidden": false,
          "title": "Bar Color"
        },
        "plot_26": {
          "isHidden": false,
          "title": "Background Color"
        },
        "plot_3": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Plot"
        },
        "plot_4": {
          "isHidden": false,
          "title": "Background Color"
        },
        "plot_5": {
          "isHidden": false,
          "title": "Background Color"
        },
        "plot_6": {
          "isHidden": false,
          "title": "Background Color"
        },
        "plot_7": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Trigger Exit"
        },
        "plot_8": {
          "histogramBase": 0,
          "isHidden": false,
          "joinPoints": false,
          "title": "Stop Price"
        }
      },
      "usedLibs": [
        {
          "id": "PUB;bee0f948f0964f5d93acece9ac108f70",
          "v": "13.0"
        },
        {
          "id": "PUB;d024e7daaa60478dbddf5c5117cdfd20",
          "v": "28.0"
        },
        {
          "id": "PUB;82bbc2fd83f649e3bec5e201e07dd50d",
          "v": "2.0"
        },
        {
          "id": "PUB;eff2410ba0644f1b93addfb2499cedcd",
          "v": "1.0"
        },
        {
          "id": "PUB;c35f180ba3ea487db81701a27d9ecc75",
          "v": "2.0"
        }
      ],
      "usesPrivateLib": true,
      "warnings": [
        "line 1068: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 1402: The `isPreVLong` variable casts a numeric value to the 'bool' type. To avoid potential unexpected results, assign a 'bool' value to this variable.",
        "line 1403: The `isPreVShort` variable casts a numeric value to the 'bool' type. To avoid potential unexpected results, assign a 'bool' value to this variable.",
        "line 1730: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 1730: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 1875: The `condition` parameter of the `ta.barssince` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 1876: The `condition` parameter of the `ta.barssince` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 2155: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 2155: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 2232: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 2232: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 2239: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 2239: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter.",
        "line 3548: The `expr0` parameter of the `operator ?:` function accepts a 'bool' argument. To avoid potential unexpected results, pass a 'bool' value or expression to this parameter."
      ],
      "shortId": "StrategyScript$PUB;69c6abd65d19495e96187f1f1602dbda",
      "packageId": "tv-scripting",
      "version": 101,
      "fullId": "StrategyScript$PUB;69c6abd65d19495e96187f1f1602dbda@tv-scripting-101",
      "productId": "tv-scripting",
      "_serverMetaInfoVersion": 54
    }
  },
  "symbolAliasServiceState": []
}